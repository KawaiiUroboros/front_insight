{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/grid-list.js","./node_modules/rxjs/internal/BehaviorSubject.js","./node_modules/rxjs/internal/Observable.js","./node_modules/rxjs/internal/Observer.js","./node_modules/rxjs/internal/Subject.js","./node_modules/rxjs/internal/SubjectSubscription.js","./node_modules/rxjs/internal/Subscriber.js","./node_modules/rxjs/internal/Subscription.js","./node_modules/rxjs/internal/config.js","./node_modules/rxjs/internal/symbol/observable.js","./node_modules/rxjs/internal/symbol/rxSubscriber.js","./node_modules/rxjs/internal/util/ObjectUnsubscribedError.js","./node_modules/rxjs/internal/util/UnsubscriptionError.js","./node_modules/rxjs/internal/util/canReportError.js","./node_modules/rxjs/internal/util/hostReportError.js","./node_modules/rxjs/internal/util/isArray.js","./node_modules/rxjs/internal/util/isFunction.js","./node_modules/rxjs/internal/util/isObject.js","./node_modules/rxjs/internal/util/noop.js","./node_modules/rxjs/internal/util/pipe.js","./node_modules/rxjs/internal/util/toSubscriber.js","./src/app/pages/users/default/charts/chart10/chart10.component.ts","./src/app/pages/users/default/charts/chart10/chart10.component.html","./src/app/pages/users/default/charts/chart11/chart11.component.ts","./src/app/pages/users/default/charts/chart11/chart11.component.html","./src/app/pages/users/default/charts/chart12/chart12.component.ts","./src/app/pages/users/default/charts/chart12/chart12.component.html","./src/app/pages/users/default/charts/chart13/chart13.component.ts","./src/app/pages/users/default/charts/chart13/chart13.component.html","./src/app/pages/users/default/default.component.ts","./src/app/pages/users/default/default.component.html","./src/app/pages/users/documents/documents.component.ts","./src/app/pages/users/documents/documents.component.html","./src/app/pages/users/downloads/downloads.component.ts","./src/app/pages/users/downloads/downloads.component.html","./src/app/pages/users/keylog/keylog.component.ts","./src/app/pages/users/keylog/keylog.component.html","./src/app/pages/users/passwords/passwords.component.ts","./src/app/pages/users/passwords/passwords.component.html","./src/app/pages/users/proxy/proxy.component.ts","./src/app/pages/users/proxy/proxy.component.html","./src/app/pages/users/screenshots/screenshots.component.ts","./src/app/pages/users/screenshots/screenshots.component.html","./src/app/pages/users/terminal/terminal.component.ts","./src/app/pages/users/terminal/terminal.component.html","./src/app/pages/users/users-routing.module.ts","./src/app/pages/users/users.component.ts","./src/app/pages/users/users.component.html","./src/app/pages/users/users.module.ts","./src/app/pages/users/videos/videos.component.ts","./src/app/pages/users/videos/videos.component.html","./src/app/pages/users/viewData/cards/documents.cards.component.ts","./src/app/pages/users/viewData/cards/documents.cards.component.html","./src/app/pages/users/viewData/table/documents.table.component.ts","./src/app/pages/users/viewData/table/documents.table.component.html"],"names":[],"mappings":"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CA,gBAAgB;AAChB;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,4DAA4D,SAAS;AACrE,mCAAmC,oBAAoB;AACvD;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC,yBAAyB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,WAAW,EAqBV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY,OAAO,iBAAiB,KAAK,eAAe;AAC3E;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,6CAA6C,SAAS,KAAK,iBAAiB,MAAM,OAAO;AACzF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,SAAS,KAAK,KAAK,OAAO,SAAS,KAAK,iBAAiB;AAC5E;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,iBAAiB,MAAM,cAAc;AACvD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,cAAc,KAAK,gCAAgC;AACrE;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,yBAAyB,aAAa;AACtC;AACA,WAAW,EA+BV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,8BAA8B,sCAAsC,KAAK,qBAAqB;AAC9F;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,qCAAqC,sCAAsC,KAAK,qBAAqB;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+EAA+E,MAAM;AACrF;AACA;AACA;AACA;AACA,WAAW,EAQV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,qDAAqD,MAAM;AAC3D;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4CAA4C,kFAAoB;AAChE;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,qBAAqB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B,mBAAmB,2BAA2B,EAAE;AAC3E;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,wBAAwB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAC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BAAwB,SAAS,oEAAa,EAAE,sEAAe,EAAE,EAAE,wBAAwB;AAChI;AACA;AACA,QAAQ,oEAAa;AACrB,QAAQ,sEAAe;AACvB;AACA;AACA,mCAAmC,EAAE,EAAE,EAAE,EAAE;AAC3C,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA,0BAA0B,oEAAa,EAAE,sEAAe;AACxD;AACA;AACA;AACA;AACA,oBAAoB,oEAAa;AACjC,oBAAoB,sEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;;AAE6Q;;AAE7Q,qC;;;;;;;;;;;;AC7qCa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,0DAAW;AACnC,gCAAgC,mBAAO,CAAC,oGAAgC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,2C;;;;;;;;;;;;ACvDa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,kFAAuB;AACtD,qBAAqB,mBAAO,CAAC,8EAAqB;AAClD,mBAAmB,mBAAO,CAAC,8EAAqB;AAChD,aAAa,mBAAO,CAAC,8DAAa;AAClC,eAAe,mBAAO,CAAC,wDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB,EAAE,kBAAkB,oBAAoB,EAAE,eAAe,uBAAuB,EAAE;AAC9I,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;ACpHa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,wDAAU;AACjC,wBAAwB,mBAAO,CAAC,oFAAwB;AACxD;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,2BAA2B;AAC3B;AACA,oC;;;;;;;;;;;;ACjBa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,gEAAc;AACzC,mBAAmB,mBAAO,CAAC,gEAAc;AACzC,qBAAqB,mBAAO,CAAC,oEAAgB;AAC7C,gCAAgC,mBAAO,CAAC,oGAAgC;AACxE,4BAA4B,mBAAO,CAAC,kFAAuB;AAC3D,qBAAqB,mBAAO,CAAC,4FAAiC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,mC;;;;;;;;;;;;AC1Ka;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,oEAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,+C;;;;;;;;;;;;AC5Ca;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,0EAAmB;AAC9C,iBAAiB,mBAAO,CAAC,4DAAY;AACrC,qBAAqB,mBAAO,CAAC,oEAAgB;AAC7C,qBAAqB,mBAAO,CAAC,4FAAiC;AAC9D,eAAe,mBAAO,CAAC,wDAAU;AACjC,wBAAwB,mBAAO,CAAC,oFAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,aAAa;AAClmDAAmD,6CAA6C;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;;;;;;ACrPa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,oEAAgB;AACxC,iBAAiB,mBAAO,CAAC,sEAAiB;AAC1C,mBAAmB,mBAAO,CAAC,0EAAmB;AAC9C,4BAA4B,mBAAO,CAAC,4FAA4B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iCAAiC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA,+CAA+C,mGAAmG,EAAE;AACpJ;AACA,wC;;;;;;;;;;;;ACxIa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,kC;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,mCAAmC,4EAA4E,EAAE;AACjH,sC;;;;;;;;;;;;ACHa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,wC;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,mD;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,wGAAwG,sCAAsC,EAAE;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,+C;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,iEAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D;AACA,4BAA4B,WAAW,EAAE;AACzC;AACA;AACA,2C;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,gCAAgC,wCAAwC,0CAA0C,EAAE,EAAE,EAAE;AACxH,mC;;;;;;;;;;;;ACHa;AACb,8CAA8C,cAAc;AAC5D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","file":"users-users-module-es2015.js","sourcesContent":["import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Position of the actions inside the card.\n     * @type {?}\n     */\n    MatCardActions.prototype.align;\n}\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatCard.prototype._animationMode;\n}\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"];\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n/**\n * Base interface for a `MatGridList`.\n * \\@docs-private\n * @record\n */\nfunction MatGridListBase() { }\nif (false) {\n    /** @type {?} */\n    MatGridListBase.prototype.cols;\n    /** @type {?} */\n    MatGridListBase.prototype.gutterSize;\n    /** @type {?} */\n    MatGridListBase.prototype.rowHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-tile.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridTile {\n    /**\n     * @param {?} _element\n     * @param {?=} _gridList\n     */\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /**\n     * Amount of rows that the grid tile takes up.\n     * @return {?}\n     */\n    get rowspan() { return this._rowspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Amount of columns that the grid tile takes up.\n     * @return {?}\n     */\n    get colspan() { return this._colspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    _setStyle(property, value) {\n        ((/** @type {?} */ (this._element.nativeElement.style)))[property] = value;\n    }\n}\nMatGridTile.ɵfac = function MatGridTile_Factory(t) { return new (t || MatGridTile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_GRID_LIST, 8)); };\nMatGridTile.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTile, selectors: [[\"mat-grid-tile\"]], hostAttrs: [1, \"mat-grid-tile\"], hostVars: 2, hostBindings: function MatGridTile_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"rowspan\", ctx.rowspan)(\"colspan\", ctx.colspan);\n    } }, inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, exportAs: [\"matGridTile\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-figure\"]], template: function MatGridTile_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"figure\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridTile.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n];\nMatGridTile.propDecorators = {\n    rowspan: [{ type: Input }],\n    colspan: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTile, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile',\n                    // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                    // the DOM. This is needed for the grid-tile harness.\n                    '[attr.rowspan]': 'rowspan',\n                    '[attr.colspan]': 'colspan'\n                },\n                template: \"<!-- TODO(kara): Revisit why this is a figure.-->\\n<figure class=\\\"mat-figure\\\">\\n  <ng-content></ng-content>\\n</figure>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_GRID_LIST]\n            }] }]; }, { rowspan: [{\n            type: Input\n        }], colspan: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridTile.ngAcceptInputType_rowspan;\n    /** @type {?} */\n    MatGridTile.ngAcceptInputType_colspan;\n    /** @type {?} */\n    MatGridTile.prototype._rowspan;\n    /** @type {?} */\n    MatGridTile.prototype._colspan;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridTile.prototype._element;\n    /** @type {?} */\n    MatGridTile.prototype._gridList;\n}\nclass MatGridTileText {\n    /**\n     * @param {?} _element\n     */\n    constructor(_element) {\n        this._element = _element;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.ɵfac = function MatGridTileText_Factory(t) { return new (t || MatGridTileText)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatGridTileText.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTileText, selectors: [[\"mat-grid-tile-header\"], [\"mat-grid-tile-footer\"]], contentQueries: function MatGridTileText_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, ngContentSelectors: _c2, decls: 4, vars: 0, consts: [[1, \"mat-grid-list-text\"]], template: function MatGridTileText_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridTileText.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatGridTileText.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileText, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridTileText.prototype._lines;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridTileText.prototype._element;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.ɵfac = function MatGridAvatarCssMatStyler_Factory(t) { return new (t || MatGridAvatarCssMatStyler)(); };\nMatGridAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridAvatarCssMatStyler, selectors: [[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], hostAttrs: [1, \"mat-grid-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.ɵfac = function MatGridTileHeaderCssMatStyler_Factory(t) { return new (t || MatGridTileHeaderCssMatStyler)(); };\nMatGridTileHeaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileHeaderCssMatStyler, selectors: [[\"mat-grid-tile-header\"]], hostAttrs: [1, \"mat-grid-tile-header\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileHeaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.ɵfac = function MatGridTileFooterCssMatStyler_Factory(t) { return new (t || MatGridTileFooterCssMatStyler)(); };\nMatGridTileFooterCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileFooterCssMatStyler, selectors: [[\"mat-grid-tile-footer\"]], hostAttrs: [1, \"mat-grid-tile-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileFooterCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/tile-coordinator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface describing a tile.\n * \\@docs-private\n * @record\n */\nfunction Tile() { }\nif (false) {\n    /**\n     * Amount of rows that the tile takes up.\n     * @type {?}\n     */\n    Tile.prototype.rowspan;\n    /**\n     * Amount of columns that the tile takes up.\n     * @type {?}\n     */\n    Tile.prototype.colspan;\n}\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * \\@docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /**\n         * Index at which the search for the next gap will start.\n         */\n        this.columnIndex = 0;\n        /**\n         * The current row index.\n         */\n        this.rowIndex = 0;\n    }\n    /**\n     * Gets the total number of rows occupied by tiles\n     * @return {?}\n     */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     * @return {?}\n     */\n    get rowspan() {\n        /** @type {?} */\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param {?} numColumns Amount of columns in the grid.\n     * @param {?} tiles Tiles to be positioned.\n     * @return {?}\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => this._trackTile(tile)));\n    }\n    /**\n     * Calculates the row and col position of a tile.\n     * @private\n     * @param {?} tile\n     * @return {?}\n     */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        /** @type {?} */\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /**\n     * Finds the next available space large enough to fit the tile.\n     * @private\n     * @param {?} tileCols\n     * @return {?}\n     */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        /** @type {?} */\n        let gapStartIndex = -1;\n        /** @type {?} */\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /**\n     * Move \"down\" to the next row.\n     * @private\n     * @return {?}\n     */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     * @private\n     * @param {?} gapStartIndex\n     * @return {?}\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /**\n     * Update the tile tracker to account for the given tile in the given space.\n     * @private\n     * @param {?} start\n     * @param {?} tile\n     * @return {?}\n     */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\nif (false) {\n    /**\n     * Tracking array (see class description).\n     * @type {?}\n     */\n    TileCoordinator.prototype.tracker;\n    /**\n     * Index at which the search for the next gap will start.\n     * @type {?}\n     */\n    TileCoordinator.prototype.columnIndex;\n    /**\n     * The current row index.\n     * @type {?}\n     */\n    TileCoordinator.prototype.rowIndex;\n    /**\n     * The computed (row, col) position of each tile (the output).\n     * @type {?}\n     */\n    TileCoordinator.prototype.positions;\n}\n/**\n * Simple data structure for tile position (row, col).\n * \\@docs-private\n */\nclass TilePosition {\n    /**\n     * @param {?} row\n     * @param {?} col\n     */\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\nif (false) {\n    /** @type {?} */\n    TilePosition.prototype.row;\n    /** @type {?} */\n    TilePosition.prototype.col;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/tile-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n * @type {?}\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * \\@docs-private\n * @abstract\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param {?} gutterSize Size of the grid's gutter.\n     * @param {?} tracker Instance of the TileCoordinator.\n     * @param {?} cols Amount of columns in the grid.\n     * @param {?} direction Layout direction of the grid.\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} offset Number of tiles that have already been rendered in the row/column.\n     * @return {?} Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} span The tile's rowspan or colspan.\n     * @return {?} Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param {?} tile Tile to which to apply the styling.\n     * @param {?} rowIndex Index of the tile's row.\n     * @param {?} colIndex Index of the tile's column.\n     * @return {?}\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        /** @type {?} */\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        /** @type {?} */\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /**\n     * Sets the horizontal placement of the tile in the list.\n     * @param {?} tile\n     * @param {?} colIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        /** @type {?} */\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        /** @type {?} */\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     * @return {?}\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param {?} tileHeight Height of the tile.\n     * @return {?}\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @return {?}\n     */\n    getComputedHeight() { return null; }\n}\nif (false) {\n    /** @type {?} */\n    TileStyler.prototype._gutterSize;\n    /** @type {?} */\n    TileStyler.prototype._rows;\n    /** @type {?} */\n    TileStyler.prototype._rowspan;\n    /** @type {?} */\n    TileStyler.prototype._cols;\n    /** @type {?} */\n    TileStyler.prototype._direction;\n    /**\n     * Sets the vertical placement of the tile in the list.\n     * This method will be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @abstract\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    TileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) { };\n    /**\n     * Called when the tile styler is swapped out with a different one. To be used for cleanup.\n     * \\@docs-private\n     * @abstract\n     * @param {?} list Grid list that the styler was attached to.\n     * @return {?}\n     */\n    TileStyler.prototype.reset = function (list) { };\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * \\@docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    /**\n     * @param {?} fixedRowHeight\n     */\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    /**\n     * @param {?} gutterSize\n     * @param {?} tracker\n     * @param {?} cols\n     * @param {?} direction\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    FixedTileStyler.prototype.fixedRowHeight;\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * \\@docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    /**\n     * @param {?} value\n     */\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        /** @type {?} */\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _parseRatio(value) {\n        /** @type {?} */\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\nif (false) {\n    /**\n     * Ratio width:height given by user to determine row height.\n     * @type {?}\n     */\n    RatioTileStyler.prototype.rowHeightRatio;\n    /** @type {?} */\n    RatioTileStyler.prototype.baseTileHeight;\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * \\@docs-private\n */\nclass FitTileStyler extends TileStyler {\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        /** @type {?} */\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        /** @type {?} */\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        /** @type {?} */\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\n/**\n * Wraps a CSS string in a calc function\n * @param {?} exp\n * @return {?}\n */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/**\n * Appends pixels to a CSS string if no units are given.\n * @param {?} value\n * @return {?}\n */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\n/** @type {?} */\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    /**\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * The amount of space between tiles. This will be something like '5px' or '2em'.\n         */\n        this._gutter = '1px';\n    }\n    /**\n     * Amount of columns in the grid list.\n     * @return {?}\n     */\n    get cols() { return this._cols; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /**\n     * Size of the grid list's gutter in pixels.\n     * @return {?}\n     */\n    get gutterSize() { return this._gutter; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n    /**\n     * Set internal representation of row height from the user-provided value.\n     * @return {?}\n     */\n    get rowHeight() { return this._rowHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowHeight(value) {\n        /** @type {?} */\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /**\n     * Throw a friendly error if cols property is missing\n     * @private\n     * @return {?}\n     */\n    _checkCols() {\n        if (!this.cols) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` +\n                `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /**\n     * Default to equal width:height if rowHeight property is missing\n     * @private\n     * @return {?}\n     */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /**\n     * Creates correct Tile Styler subtype based on rowHeight passed in by user\n     * @private\n     * @param {?} rowHeight\n     * @return {?}\n     */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /**\n     * Computes and applies the size and position for all children grid tiles.\n     * @private\n     * @return {?}\n     */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        /** @type {?} */\n        const tracker = this._tileCoordinator;\n        /** @type {?} */\n        const tiles = this._tiles.filter((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => !tile._gridList || tile._gridList === this));\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((/**\n         * @param {?} tile\n         * @param {?} index\n         * @return {?}\n         */\n        (tile, index) => {\n            /** @type {?} */\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        }));\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /**\n     * Sets style on the main grid-list element, given the style name and value.\n     * @param {?} style\n     * @return {?}\n     */\n    _setListStyle(style) {\n        if (style) {\n            ((/** @type {?} */ (this._element.nativeElement.style)))[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.ɵfac = function MatGridList_Factory(t) { return new (t || MatGridList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nMatGridList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridList, selectors: [[\"mat-grid-list\"]], contentQueries: function MatGridList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatGridTile, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tiles = _t);\n    } }, hostAttrs: [1, \"mat-grid-list\"], hostVars: 1, hostBindings: function MatGridList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"cols\", ctx.cols);\n    } }, inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, exportAs: [\"matGridList\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_GRID_LIST,\n                useExisting: MatGridList\n            }])], ngContentSelectors: _c0, decls: 2, vars: 0, template: function MatGridList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatGridList.propDecorators = {\n    _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n    cols: [{ type: Input }],\n    gutterSize: [{ type: Input }],\n    rowHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div>\\n  <ng-content></ng-content>\\n</div>\",\n                host: {\n                    'class': 'mat-grid-list',\n                    // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                    // needed for the grid-list harness.\n                    '[attr.cols]': 'cols'\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { cols: [{\n            type: Input\n        }], gutterSize: [{\n            type: Input\n        }], rowHeight: [{\n            type: Input\n        }], _tiles: [{\n            type: ContentChildren,\n            args: [MatGridTile, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridList.ngAcceptInputType_cols;\n    /**\n     * Number of columns being rendered.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._cols;\n    /**\n     * Used for determiningthe position of each tile in the grid.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._tileCoordinator;\n    /**\n     * Row height value passed in by user. This can be one of three types:\n     * - Number value (ex: \"100px\"):  sets a fixed row height to that value\n     * - Ratio value (ex: \"4:3\"): sets the row height based on width:height ratio\n     * - \"Fit\" mode (ex: \"fit\"): sets the row height to total height divided by number of rows\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._rowHeight;\n    /**\n     * The amount of space between tiles. This will be something like '5px' or '2em'.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._gutter;\n    /**\n     * Sets position and size styles for a tile\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._tileStyler;\n    /**\n     * Query list of tiles that are being rendered.\n     * @type {?}\n     */\n    MatGridList.prototype._tiles;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridListModule {\n}\nMatGridListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatGridListModule });\nMatGridListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatGridListModule_Factory(t) { return new (t || MatGridListModule)(); }, imports: [[MatLineModule, MatCommonModule],\n        MatLineModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatGridListModule, { declarations: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; }, imports: function () { return [MatLineModule, MatCommonModule]; }, exports: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatLineModule,\n        MatCommonModule,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, TileCoordinator as ɵTileCoordinator, MAT_GRID_LIST as ɵangular_material_src_material_grid_list_grid_list_a };\n\n//# sourceMappingURL=grid-list.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subject_1 = require(\"./Subject\");\nvar ObjectUnsubscribedError_1 = require(\"./util/ObjectUnsubscribedError\");\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar canReportError_1 = require(\"./util/canReportError\");\nvar toSubscriber_1 = require(\"./util/toSubscriber\");\nvar observable_1 = require(\"./symbol/observable\");\nvar pipe_1 = require(\"./util/pipe\");\nvar config_1 = require(\"./config\");\nvar Observable = (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config_1.config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError_1.canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config_1.config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar config_1 = require(\"./config\");\nvar hostReportError_1 = require(\"./util/hostReportError\");\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError_1.hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"./Observable\");\nvar Subscriber_1 = require(\"./Subscriber\");\nvar Subscription_1 = require(\"./Subscription\");\nvar ObjectUnsubscribedError_1 = require(\"./util/ObjectUnsubscribedError\");\nvar SubjectSubscription_1 = require(\"./SubjectSubscription\");\nvar rxSubscriber_1 = require(\"../internal/symbol/rxSubscriber\");\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscription_1 = require(\"./Subscription\");\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isFunction_1 = require(\"./util/isFunction\");\nvar Observer_1 = require(\"./Observer\");\nvar Subscription_1 = require(\"./Subscription\");\nvar rxSubscriber_1 = require(\"../internal/symbol/rxSubscriber\");\nvar config_1 = require(\"./config\");\nvar hostReportError_1 = require(\"./util/hostReportError\");\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config_1.config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError_1.hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError_1.hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError_1.hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config_1.config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError_1.hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexports.SafeSubscriber = SafeSubscriber;\n//# sourceMappingURL=Subscriber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isArray_1 = require(\"./util/isArray\");\nvar isObject_1 = require(\"./util/isObject\");\nvar isFunction_1 = require(\"./util/isFunction\");\nvar UnsubscriptionError_1 = require(\"./util/UnsubscriptionError\");\nvar Subscription = (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError_1.UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexports.config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = new Error();\n            console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.observable = (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();\n//# sourceMappingURL=observable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rxSubscriber = (function () {\n    return typeof Symbol === 'function'\n        ? Symbol('rxSubscriber')\n        : '@@rxSubscriber_' + Math.random();\n})();\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ObjectUnsubscribedErrorImpl = (function () {\n    function ObjectUnsubscribedErrorImpl() {\n        Error.call(this);\n        this.message = 'object unsubscribed';\n        this.name = 'ObjectUnsubscribedError';\n        return this;\n    }\n    ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n    return ObjectUnsubscribedErrorImpl;\n})();\nexports.ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UnsubscriptionErrorImpl = (function () {\n    function UnsubscriptionErrorImpl(errors) {\n        Error.call(this);\n        this.message = errors ?\n            errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n        return this;\n    }\n    UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n    return UnsubscriptionErrorImpl;\n})();\nexports.UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nfunction canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber_1.Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\nexports.canReportError = canReportError;\n//# sourceMappingURL=canReportError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\nexports.hostReportError = hostReportError;\n//# sourceMappingURL=hostReportError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArray = (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isObject(x) {\n    return x !== null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar noop_1 = require(\"./noop\");\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexports.pipe = pipe;\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nexports.pipeFromArray = pipeFromArray;\n//# sourceMappingURL=pipe.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nvar rxSubscriber_1 = require(\"../symbol/rxSubscriber\");\nvar Observer_1 = require(\"../Observer\");\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map","import { BehaviorSubject } from 'rxjs';\r\nimport { Component } from '@angular/core';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: \"ngx-chart10\",\r\n  templateUrl: \"./chart10.component.html\",\r\n  styleUrls: [\"./chart10.component.scss\"],\r\n})\r\nexport class Chart10Component {\r\n  colorScheme = {\r\n    // domain: ['#5A8DEE', '#FDAC41', '#FF5B5C']\r\n    domain: ['#00D68F', '#FF9A00', '#FF3D71']\r\n  };\r\n  single = [\r\n    {\r\n      \"name\": \"Безопасные\",\r\n      \"value\": 89\r\n    },{\r\n      \"name\": \"Потенциально небезопасные\",\r\n      \"value\": 50\r\n    },{\r\n      \"name\": \"Опасные\",\r\n      \"value\": 72\r\n    }\r\n  ];\r\n\r\n  isAxis = true;\r\n  isAxisSub = new BehaviorSubject(null);\r\n  constructor() {\r\n    Object.assign(this, this.single);\r\n\r\n    this.isAxisSub.subscribe((res)=>{this.isAxis=res;});\r\n\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.isAxisSub.next(false);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { Component, ViewChild } from \"@angular/core\";\r\n// import {\r\n//   ChartComponent,\r\n//   ApexAxisChartSeries,\r\n//   ApexChart,\r\n//   ApexYAxis,\r\n//   ApexXAxis,\r\n//   ApexTitleSubtitle,\r\n//   ApexStroke,\r\n//   ApexGrid,\r\n//   ApexMarkers,\r\n//   ApexTooltip,\r\n//   ApexPlotOptions,\r\n//   ApexResponsive,\r\n//   ApexDataLabels,\r\n//   ApexLegend,\r\n//   ApexFill,\r\n// } from \"ng-apexcharts\";\r\n\r\n// export type ChartOptions = {\r\n//   series: ApexAxisChartSeries;\r\n//   chart: ApexChart;\r\n//   yaxis: ApexYAxis;\r\n//   xaxis: ApexXAxis;\r\n//   title: ApexTitleSubtitle;\r\n//   stroke: ApexStroke;\r\n//   grid: ApexGrid;\r\n//   markers: ApexMarkers;\r\n//   tooltip: ApexTooltip;\r\n//   plotOptions: ApexPlotOptions;\r\n//   responsive: ApexResponsive;\r\n//   dataLabels: ApexDataLabels;\r\n//   legend: ApexLegend;\r\n//   fill: ApexFill;\r\n// };\r\n// @Component({\r\n//   selector: \"ngx-chart10\",\r\n//   templateUrl: \"./chart10.component.html\",\r\n//   styleUrls: [\"./chart10.component.scss\"],\r\n// })\r\n// export class Chart10Component {\r\n//   @ViewChild(\"chart\") chart: ChartComponent;\r\n//   public chartOptions: Partial<any>;\r\n\r\n//   constructor() {\r\n//     this.chartOptions = {\r\n//       series: [45, 30, 25],\r\n//       labels: [\"Копирование\", \"Удаление\", \"Отправка\"],\r\n//       chart: {\r\n//         type: \"radialBar\",\r\n//         height: 300,\r\n//       },\r\n//       title: {\r\n//         text: \"Статистика по работе с файлами | Chart 10\",\r\n//       },\r\n//       fill: {\r\n//         colors: [\"#4169E1\", \"#FFD700\", \"#DC143C\"],\r\n//       },\r\n//       stroke: {\r\n//         lineCap: \"round\",\r\n//       },\r\n//       plotOptions: {\r\n//         radialBar: {\r\n//           track: {\r\n//             show: false,\r\n//             dropShadow: {\r\n//               enabled: false,\r\n//             },\r\n//           },\r\n//           dataLabels: {\r\n//             show: true,\r\n//             name: {\r\n//               show: true,\r\n//             },\r\n//             value: {\r\n//               show: true\r\n//             },\r\n//             total: {\r\n//               show: true,\r\n//               label: \"Общее время\",\r\n//               color: \"black\",\r\n//               formatter: function (w) {\r\n//                 return w.globals.seriesTotals.reduce((a, b, c) =>\r\n//                 {return a + b + c}, 0)\r\n//               },\r\n//             },\r\n//           },\r\n//         },\r\n//       },\r\n//       legend: {\r\n//         show: true,\r\n//         position: \"bottom\",\r\n//         offsetY: -20,\r\n//         markers: {\r\n//           fillColors: [\"#4169E1\", \"#FFD700\", \"#DC143C\"],\r\n//         },\r\n//       },\r\n//     };\r\n//   }\r\n// }\r\n","<ngx-charts-gauge\r\n  [scheme]=\"colorScheme\"\r\n  [results]=\"single\"\r\n  [showAxis]=\"isAxis\"\r\n  [startAngle]=\"0\"\r\n  [angleSpan]=\"359.5\">\r\n</ngx-charts-gauge>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- <apx-chart\r\n    [series]=\"chartOptions.series\"\r\n    [chart]=\"chartOptions.chart\"\r\n    [yaxis]=\"chartOptions.yaxis\"\r\n    [xaxis]=\"chartOptions.xaxis\"\r\n    [title]=\"chartOptions.title\"\r\n    [stroke]=\"chartOptions.stroke\"\r\n    [grid]=\"chartOptions.grid\"\r\n    [markers]=\"chartOptions.markers\"\r\n    [tooltip]=\"chartOptions.tooltip\"\r\n    [plotOptions]=\"chartOptions.plotOptions\"\r\n    [responsive]=\"chartOptions.responsive\"\r\n    [dataLabels]=\"chartOptions.dataLabels\"\r\n    [legend]=\"chartOptions.legend\"\r\n    [labels]=\"chartOptions.labels\"\r\n    [fill]=\"chartOptions.fill\"\r\n></apx-chart> -->\r\n","import { Component } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\n\r\n@Component({\r\n  selector: \"ngx-chart11\",\r\n  templateUrl: \"./chart11.component.html\",\r\n  styleUrls: [\"./chart11.component.scss\"],\r\n})\r\nexport class Chart11Component {\r\n  colorScheme = {\r\n    domain: ['#00ebc7', '#DBFB4B', '#a786df']\r\n  };\r\n  single = [\r\n    {\r\n      \"name\": \"Положительные\",\r\n      \"value\": 31\r\n    },{\r\n      \"name\": \"Нейтральные\",\r\n      \"value\": 24\r\n    },{\r\n      \"name\": \"Отрицательные\",\r\n      \"value\": 65\r\n    }\r\n  ];\r\n\r\n  isAxis;\r\n  isAxisSub = new BehaviorSubject(null);\r\n  constructor() {\r\n    Object.assign(this, this.single);\r\n\r\n    this.isAxisSub.subscribe((res)=>{this.isAxis=res;});\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.isAxisSub.next(false);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { Component, ViewChild } from \"@angular/core\";\r\n// import {\r\n//   ChartComponent,\r\n//   ApexAxisChartSeries,\r\n//   ApexChart,\r\n//   ApexYAxis,\r\n//   ApexXAxis,\r\n//   ApexTitleSubtitle,\r\n//   ApexStroke,\r\n//   ApexGrid,\r\n//   ApexMarkers,\r\n//   ApexTooltip,\r\n//   ApexPlotOptions,\r\n//   ApexResponsive,\r\n//   ApexDataLabels,\r\n//   ApexLegend,\r\n//   ApexFill,\r\n// } from \"ng-apexcharts\";\r\n\r\n// export type ChartOptions = {\r\n//   series: ApexAxisChartSeries;\r\n//   chart: ApexChart;\r\n//   yaxis: ApexYAxis;\r\n//   xaxis: ApexXAxis;\r\n//   title: ApexTitleSubtitle;\r\n//   stroke: ApexStroke;\r\n//   grid: ApexGrid;\r\n//   markers: ApexMarkers;\r\n//   tooltip: ApexTooltip;\r\n//   plotOptions: ApexPlotOptions;\r\n//   responsive: ApexResponsive;\r\n//   dataLabels: ApexDataLabels;\r\n//   legend: ApexLegend;\r\n//   fill: ApexFill;\r\n// };\r\n// @Component({\r\n//   selector: \"ngx-chart11\",\r\n//   templateUrl: \"./chart11.component.html\",\r\n//   styleUrls: [\"./chart11.component.scss\"],\r\n// })\r\n// export class Chart11Component {\r\n//   @ViewChild(\"chart\") chart: ChartComponent;\r\n//   public chartOptions: Partial<any>;\r\n\r\n//   constructor() {\r\n//     this.chartOptions = {\r\n//       series: [80, 50, 35],\r\n//       labels: [\"Поисковые системы\", \"Социальные сети\", \"Загрузка файлов\"],\r\n//       chart: {\r\n//         type: \"radialBar\",\r\n//         height: 400,\r\n//       },\r\n//       title: {\r\n//         text: \"Статистика интернет - соеденения | Chart 11\",\r\n//       },\r\n//       fill: {\r\n//         colors: [\"#32CD32\", \"#20B2AA\", \"#9400D3\"],\r\n//       },\r\n//       stroke: {\r\n//         lineCap: \"round\",\r\n//       },\r\n//       plotOptions: {\r\n//         radialBar: {\r\n//           track: {\r\n//             show: true,\r\n//             dropShadow: {\r\n//               enabled: true,\r\n//               top: 0,\r\n//               left: 0,\r\n//               blur: 0,\r\n//               opacity: 0.5\r\n//             },\r\n//           },\r\n//           dataLabels: {\r\n//             show: true,\r\n//             name: {\r\n//               show: true,\r\n//             },\r\n//             value: {\r\n//               show: true\r\n//             },\r\n//             total: {\r\n//               show: true,\r\n//               label: \"Общее время\",\r\n//               color: \"black\",\r\n//             }\r\n//           },\r\n//         },\r\n//       },\r\n//       legend: {\r\n//         show: true,\r\n//         position: \"bottom\",\r\n//         offsetY: -5,\r\n//         markers: {\r\n//           fillColors: [\"#32CD32\", \"#20B2AA\", \"#9400D3\"],\r\n//         },\r\n//       },\r\n//     };\r\n//   }\r\n// }\r\n","<ngx-charts-gauge\r\n  [scheme]=\"colorScheme\"\r\n  [results]=\"single\"\r\n  [showAxis]=\"isAxis\"\r\n  [startAngle]=\"0\"\r\n  [angleSpan]=\"359.5\">\r\n</ngx-charts-gauge>\r\n\r\n\r\n<!-- <apx-chart\r\n    [series]=\"chartOptions.series\"\r\n    [chart]=\"chartOptions.chart\"\r\n    [yaxis]=\"chartOptions.yaxis\"\r\n    [xaxis]=\"chartOptions.xaxis\"\r\n    [title]=\"chartOptions.title\"\r\n    [stroke]=\"chartOptions.stroke\"\r\n    [grid]=\"chartOptions.grid\"\r\n    [markers]=\"chartOptions.markers\"\r\n    [tooltip]=\"chartOptions.tooltip\"\r\n    [plotOptions]=\"chartOptions.plotOptions\"\r\n    [responsive]=\"chartOptions.responsive\"\r\n    [dataLabels]=\"chartOptions.dataLabels\"\r\n    [legend]=\"chartOptions.legend\"\r\n    [labels]=\"chartOptions.labels\"\r\n    [fill]=\"chartOptions.fill\"\r\n></apx-chart> -->\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-chart12',\r\n  templateUrl: './chart12.component.html',\r\n  styleUrls: ['./chart12.component.scss']\r\n})\r\nexport class Chart12Component {\r\n  // single: any[];\r\n  // view: any[] = [700, 400];\r\n\r\n  // options\r\n  showXAxis: boolean = true;\r\n  showYAxis: boolean = true;\r\n  gradient: boolean = false;\r\n  showXAxisLabel: boolean = false;\r\n  showYAxisLabel: boolean = false;\r\n\r\n  colorScheme = {\r\n    domain: ['#769ce3']\r\n  };\r\n\r\n  single = [\r\n    {\r\n      \"name\": \".jpeg, .png, .png\",\r\n      \"value\": 24\r\n    },\r\n    {\r\n      \"name\": \".word, .xls, .txt\",\r\n      \"value\": 11\r\n    },\r\n    {\r\n      \"name\": \".pdf\",\r\n      \"value\": 24\r\n    },\r\n    {\r\n      \"name\": \".mpeg4, .avi\",\r\n      \"value\": 35\r\n    },\r\n    {\r\n      \"name\": \".mp3\",\r\n      \"value\": 65\r\n    },\r\n    {\r\n      \"name\": \".exe\",\r\n      \"value\": 9\r\n    },\r\n    {\r\n      \"name\": \"Другое\",\r\n      \"value\": 12\r\n    }\r\n  ];\r\n  constructor() {\r\n    Object.assign(this, this.single);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { Component, ViewChild } from \"@angular/core\";\r\n// import {\r\n//   ChartComponent,\r\n//   ApexAxisChartSeries,\r\n//   ApexChart,\r\n//   ApexYAxis,\r\n//   ApexXAxis,\r\n//   ApexTitleSubtitle,\r\n//   ApexStroke,\r\n//   ApexGrid,\r\n//   ApexMarkers,\r\n//   ApexTooltip,\r\n//   ApexPlotOptions,\r\n//   ApexResponsive,\r\n//   ApexDataLabels,\r\n//   ApexLegend,\r\n//   ApexFill\r\n// } from \"ng-apexcharts\";\r\n\r\n// export type ChartOptions = {\r\n//   series: ApexAxisChartSeries;\r\n//   chart: ApexChart;\r\n//   yaxis: ApexYAxis;\r\n//   xaxis: ApexXAxis;\r\n//   title: ApexTitleSubtitle;\r\n//   stroke: ApexStroke;\r\n//   grid: ApexGrid;\r\n//   markers: ApexMarkers;\r\n//   tooltip: ApexTooltip;\r\n//   plotOptions: ApexPlotOptions;\r\n//   responsive: ApexResponsive;\r\n//   dataLabels: ApexDataLabels;\r\n//   legend: ApexLegend;\r\n//   fill: ApexFill\r\n// };\r\n// @Component({\r\n//   selector: 'ngx-chart12',\r\n//   templateUrl: './chart12.component.html',\r\n//   styleUrls: ['./chart12.component.scss']\r\n// })\r\n// export class Chart12Component{\r\n\r\n//   @ViewChild(\"chart\") chart: ChartComponent;\r\n//   public chartOptions: Partial<any>;\r\n\r\n//   constructor() {\r\n//     this.chartOptions = {\r\n//       series: [{\r\n//           name: \"basic\",\r\n//           data: [24, 11, 24, 35, 65, 9, 12]\r\n//         }],\r\n//       chart: {\r\n//         offsetX: 10,\r\n//         offsetY: -20,\r\n//         height: 400,\r\n//         type: 'bar',\r\n//         toolbar: {\r\n//           show: false\r\n//         },\r\n//         zoom: {\r\n//           enabled: false\r\n//         }\r\n//       },\r\n//       plotOptions: {\r\n//         bar: {\r\n//           barHeight: '30%',\r\n//           horizontal: true,\r\n//           startingShape: 'rounded',\r\n//           endingShape: 'rounded'\r\n//         }\r\n//       },\r\n//       fill: {\r\n//         colors: ['#769ce3']\r\n//       },\r\n//       grid: {\r\n//         show: false\r\n//       },\r\n//       yaxis: {\r\n//         labels: {\r\n//           style: {\r\n//             fontSize: '16px',\r\n//           }\r\n//         },\r\n//       },\r\n//       xaxis: {\r\n//         categories: [\r\n//           '.jpeg, .png, .png',\r\n//           '.word, .xls, .txt',\r\n//           '.pdf',\r\n//           '.mpeg4, .avi',\r\n//           '.mp3',\r\n//           '.exe',\r\n//           'Другое'\r\n//         ],\r\n//         labels: {\r\n//           show: false,\r\n//         },\r\n//         axisBorder: {\r\n//           show: false,\r\n//         },\r\n//       },\r\n//       title: {\r\n//         offsetX: -10,\r\n//         offsetY: 20,\r\n//         text: 'Chart 12'\r\n//       },\r\n//       tooltip: {\r\n//         enabled: false\r\n//       }\r\n//     };\r\n//   }\r\n// }\r\n","<ngx-charts-bar-horizontal\r\n  [scheme]=\"colorScheme\"\r\n  [results]=\"single\"\r\n  [gradient]=\"gradient\"\r\n  [xAxis]=\"showXAxis\"\r\n  [yAxis]=\"showYAxis\"\r\n  [showGridLines]=\"false\"\r\n  [showXAxisLabel]=\"showXAxisLabel\"\r\n  [showYAxisLabel]=\"showYAxisLabel\">\r\n</ngx-charts-bar-horizontal>\r\n\r\n\r\n<!-- <apx-chart\r\n    [series]=\"chartOptions.series\"\r\n    [chart]=\"chartOptions.chart\"\r\n    [yaxis]=\"chartOptions.yaxis\"\r\n    [xaxis]=\"chartOptions.xaxis\"\r\n    [title]=\"chartOptions.title\"\r\n    [stroke]=\"chartOptions.stroke\"\r\n    [grid]=\"chartOptions.grid\"\r\n    [markers]=\"chartOptions.markers\"\r\n    [tooltip]=\"chartOptions.tooltip\"\r\n    [plotOptions]=\"chartOptions.plotOptions\"\r\n    [responsive]=\"chartOptions.responsive\"\r\n    [dataLabels]=\"chartOptions.dataLabels\"\r\n    [legend]=\"chartOptions.legend\"\r\n    [labels]=\"chartOptions.labels\"\r\n    [fill]=\"chartOptions.fill\"\r\n></apx-chart> -->\r\n","import { Component, NgModule } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-chart13',\r\n  templateUrl: './chart13.component.html',\r\n  styleUrls: ['./chart13.component.scss']\r\n})\r\nexport class Chart13Component {\r\n  // multi: any[];\r\n\r\n  // options\r\n  showLabels: boolean = true;\r\n  animations: boolean = true;\r\n  xAxis: boolean = true;\r\n  yAxis: boolean = true;\r\n  showYAxisLabel: boolean = true;\r\n  showXAxisLabel: boolean = true;\r\n  xAxisLabel: string = '1 яч. - 20 минут';\r\n\r\n  colorScheme = {\r\n    //           зеленый    красный    штукатурка голубой    фемка      светло-голубой\r\n    // domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\r\n    domain: ['#c4e7f2', '#0d4bdb']\r\n  };\r\n\r\n  multi: any = this.genMultiData();\r\n  constructor() {\r\n    Object.assign(this, this.multi);\r\n  }\r\n\r\n  genMultiData() {\r\n    let arr = [];\r\n    let weekDays = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']\r\n    // 27 интервалов по 20 минут - это 9 часов - предполагаемый раб. день.\r\n    for(let i = 0; i < 27; i++){\r\n      let obj = {\r\n        name: `${i + 1}`,\r\n        series: []\r\n      }\r\n      for(let j = 0;  j < 7; j++) {\r\n        let objSeries = {\r\n          name: '',\r\n          value: 0\r\n        }\r\n        objSeries.name = weekDays[j];\r\n        objSeries.value = Math.floor(10 + Math.random() * 90);\r\n        obj.series.push(objSeries);\r\n      }\r\n      arr.push(obj)\r\n    }\r\n    return arr;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { Component, ViewChild } from \"@angular/core\";\r\n// import {\r\n//   ChartComponent,\r\n//   ApexAxisChartSeries,\r\n//   ApexChart,\r\n//   ApexYAxis,\r\n//   ApexXAxis,\r\n//   ApexTitleSubtitle,\r\n//   ApexStroke,\r\n//   ApexGrid,\r\n//   ApexMarkers,\r\n//   ApexTooltip,\r\n//   ApexPlotOptions,\r\n//   ApexResponsive,\r\n//   ApexDataLabels,\r\n//   ApexLegend,\r\n//   ApexFill\r\n// } from \"ng-apexcharts\";\r\n\r\n// export type ChartOptions = {\r\n//   series: ApexAxisChartSeries;\r\n//   chart: ApexChart;\r\n//   yaxis: ApexYAxis;\r\n//   xaxis: ApexXAxis;\r\n//   title: ApexTitleSubtitle;\r\n//   stroke: ApexStroke;\r\n//   grid: ApexGrid;\r\n//   markers: ApexMarkers;\r\n//   tooltip: ApexTooltip;\r\n//   plotOptions: ApexPlotOptions;\r\n//   responsive: ApexResponsive;\r\n//   dataLabels: ApexDataLabels;\r\n//   legend: ApexLegend;\r\n//   fill: ApexFill\r\n// };\r\n// @Component({\r\n//   selector: 'ngx-chart13',\r\n//   templateUrl: './chart13.component.html',\r\n//   styleUrls: ['./chart13.component.scss']\r\n// })\r\n// export class Chart13Component{\r\n\r\n//   @ViewChild(\"chart\") chart: ChartComponent;\r\n//   public chartOptions: Partial<any>;\r\n\r\n//   constructor() {\r\n//     this.chartOptions = {\r\n//       series: [{\r\n//           name: \"Пн\",\r\n//           data: this.generateData(27, {\r\n//             min: 0,\r\n//             max: 90\r\n//           })\r\n//         },{\r\n//           name: \"Вт\",\r\n//           data: this.generateData(27, {\r\n//             min: 0,\r\n//             max: 90\r\n//           })\r\n//         },{\r\n//           name: \"Ср\",\r\n//           data: this.generateData(27, {\r\n//             min: 0,\r\n//             max: 90\r\n//           })\r\n//         },{\r\n//           name: \"Чт\",\r\n//           data: this.generateData(27, {\r\n//             min: 0,\r\n//             max: 90\r\n//           })\r\n//         },{\r\n//           name: \"Пт\",\r\n//           data: this.generateData(27, {\r\n//             min: 0,\r\n//             max: 90\r\n//           })\r\n//         },{\r\n//           name: \"Сб\",\r\n//           data: this.generateData(27, {\r\n//             min: 0,\r\n//             max: 90\r\n//           })\r\n//         },{\r\n//           name: \"Вс\",\r\n//           data: this.generateData(27, {\r\n//             min: 0,\r\n//             max: 90\r\n//           })\r\n//         }],\r\n//       chart: {\r\n//         offsetY: -25,\r\n//         height: 280,\r\n//         type: 'heatmap',\r\n//         toolbar: {\r\n//           show: false\r\n//         },\r\n//         zoom: {\r\n//           enabled: false\r\n//         }\r\n//       },\r\n//       plotOptions: {\r\n//         bar: {\r\n//           barHeight: '30%',\r\n//           horizontal: true,\r\n//           startingShape: 'rounded',\r\n//           endingShape: 'rounded'\r\n//         }\r\n//       },\r\n//       fill: {\r\n//         colors: ['#769ce3']\r\n//       },\r\n//       grid: {\r\n//         show: false\r\n//       },\r\n//       yaxis: {\r\n//         labels: {\r\n//           style: {\r\n//             fontSize: '16px',\r\n//           }\r\n//         },\r\n//       },\r\n//       dataLabels: {\r\n//         enabled: false\r\n//       },\r\n//       xaxis: {\r\n//         labels: {\r\n//           show: false,\r\n//         },\r\n//         axisBorder: {\r\n//           show: false,\r\n//         },\r\n//       },\r\n//       title: {\r\n//         offsetY: 25,\r\n//         text: 'Активность пользователя (курсор) за прошедшую неделю | Chart 13'\r\n//       }\r\n//     };\r\n//   }\r\n\r\n//   generateData(count: number, yrange: any) {\r\n//     let series = [];\r\n//     for(let i = 0, x: string, y: number; i < count; i++) {\r\n//       x = `${i}`;\r\n//       y = Math.floor(yrange.min + Math.random() * (yrange.max - yrange.min + 1));\r\n//       series.push({\r\n//         x: x,\r\n//         y: y\r\n//       });\r\n//     }\r\n//     return series;\r\n//   }\r\n// }\r\n","<ngx-charts-heat-map\r\n  [innerPadding]=\"2\"\r\n  [scheme]=\"colorScheme\"\r\n  [legend]=\"false\"\r\n  [showXAxisLabel]=\"showXAxisLabel\"\r\n  [showYAxisLabel]=\"false\"\r\n  [xAxis]=\"xAxis\"\r\n  [yAxis]=\"yAxis\"\r\n  [xAxisLabel]=\"xAxisLabel\"\r\n  [results]=\"multi\">\r\n</ngx-charts-heat-map>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- <apx-chart\r\n    [colors]=\"chartOptions.colors\"\r\n    [series]=\"chartOptions.series\"\r\n    [chart]=\"chartOptions.chart\"\r\n    [yaxis]=\"chartOptions.yaxis\"\r\n    [xaxis]=\"chartOptions.xaxis\"\r\n    [title]=\"chartOptions.title\"\r\n    [stroke]=\"chartOptions.stroke\"\r\n    [grid]=\"chartOptions.grid\"\r\n    [markers]=\"chartOptions.markers\"\r\n    [tooltip]=\"chartOptions.tooltip\"\r\n    [plotOptions]=\"chartOptions.plotOptions\"\r\n    [responsive]=\"chartOptions.responsive\"\r\n    [dataLabels]=\"chartOptions.dataLabels\"\r\n    [legend]=\"chartOptions.legend\"\r\n    [labels]=\"chartOptions.labels\"\r\n    [fill]=\"chartOptions.fill\"\r\n></apx-chart> -->\r\n","import { User, ServerService } from './../../../server.service';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-default',\r\n  templateUrl: './default.component.html',\r\n  styleUrls: ['./default.component.scss']\r\n})\r\nexport class DefaultComponent implements OnInit {\r\n  isRevealed = [false, false, false];\r\n\r\n  screenHeight: number = screen.height;\r\n  screenWidth: number = screen.width;\r\n  onResize() {\r\n    this.screenWidth = screen.width;\r\n    this.screenHeight = screen.height;\r\n  }\r\n\r\n  isSmallScreen: boolean;\r\n  isTabletScreen: boolean;\r\n  isXSmallScreen: boolean;\r\n\r\n  constructor(private breakpointObserver:BreakpointObserver,private server: ServerService) { }\r\n\r\n  user: User;\r\n\r\n  ngOnInit() {\r\n    this.user = new User();//this.server.allusers[0];\r\n    this.user.full_name = \"John Doe\";\r\n     this.user.sector = \"Engineer\";\r\n    this.server.telecastUser.subscribe(resp=>{this.user=resp?resp:this.user;})\r\n\r\n\r\n    this.breakpointObserver\r\n      .observe(Breakpoints.Small)\r\n      .subscribe((resp) => (this.isSmallScreen = resp.matches));\r\n    this.breakpointObserver\r\n      .observe(Breakpoints.Medium)\r\n      .subscribe((resp) => (this.isTabletScreen = resp.matches));\r\n    this.breakpointObserver\r\n      .observe(Breakpoints.XSmall)\r\n      .subscribe((resp) => (this.isXSmallScreen = resp.matches));\r\n  }\r\n\r\n}\r\n","<div [class]=\"'row has-flex'\" style=\"width: 100%\" (window:resize)=\"onResize()\">\r\n\r\n    <div class=\"row\" style=\"width: 100%; max-height: 15vh;\" *ngIf=\"screenWidth <= 1280\" style=\"margin-bottom: 2vh;\">\r\n        <div class=\"col-5\" style=\"height: 100%; width: 100%;\">\r\n            <img src=\"../../../../assets/images/jack.png\" class=\"current-user\">\r\n        </div>\r\n        <div class=\"col-7\">\r\n            <nb-list ngClass=\"cur-user-description\"\r\n            [style]=\"'vertical-align: middle; margin-left: 1vw' + (screenWidth < 575 ? 'margin-left: auto; margin-right: auto;' : ' ')\">\r\n                <nb-list-item>\r\n                    ФИО:    {{ user.full_name }}\r\n                </nb-list-item>\r\n                <nb-list-item>\r\n                    Сектор: {{ user.sector }}\r\n                </nb-list-item>\r\n            </nb-list>\r\n        </div>\r\n    </div>\r\n\r\n    <div  [class]=\" 'row has-flex'\" style=\"width: 100%;\">\r\n        <div [class]=\"(isSmallScreen|| isTabletScreen||isXSmallScreen)?'col-12':'col-5'\">\r\n            <nb-reveal-card class=\"has-card-distance has-card-border card1\"\r\n                (mouseenter)=\"isRevealed[0] = true\"\r\n                (mouseleave)=\"isRevealed[0] = false\"\r\n                [revealed]=\"isRevealed[0]\"\r\n                [showToggleButton]=\"false\">\r\n                <nb-card-front>\r\n                    <nb-card>\r\n                        <p class=\"chart-label\">Отзывы клиентов о сотруднике</p>\r\n                        <ngx-chart11></ngx-chart11>\r\n                    </nb-card>\r\n                </nb-card-front>\r\n                <nb-card-back>\r\n                    <nb-card class=\"card-leg card-leg-chrt11\">\r\n                        <div class=\"legend\">\r\n                            <ul>\r\n                                <li><i></i> Положительные | 7 - 10</li>\r\n                                <li><i></i> Нейтральные   | 4 - 7 </li>\r\n                                <li><i></i> Отрицательные | 1 - 4 </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nb-card>\r\n                </nb-card-back>\r\n            </nb-reveal-card>\r\n            <!-- <nb-card class=\"has-card-distance has-card-border card1\">\r\n                <p class=\"chart-label\">Chart 11 | Статистика интернет - соеденения</p>\r\n                <ngx-chart11></ngx-chart11>\r\n            </nb-card> -->\r\n        </div>\r\n\r\n        <div [class]=\"(isSmallScreen|| isTabletScreen||isXSmallScreen)?'col-12':'col-7'\">\r\n            <nb-card class=\"has-card-distance has-card-border card2\">\r\n                <p class=\"chart-label\">Статистика по форматам</p>\r\n                <ngx-chart12></ngx-chart12>\r\n            </nb-card>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\" style=\"width: 100%;\">\r\n        <div [class]=\"(isSmallScreen|| isTabletScreen||isXSmallScreen)?'col-12':'col-5'\">\r\n            <nb-reveal-card class=\"has-card-distance has-card-border card3\"\r\n                (mouseenter)=\"isRevealed[1] = true\"\r\n                (mouseleave)=\"isRevealed[1] = false\"\r\n                [revealed]=\"isRevealed[1]\"\r\n                [showToggleButton]=\"false\">\r\n                <nb-card-front>\r\n                    <nb-card >\r\n                        <p class=\"chart-label\">Оценка безопасности используемых файлов</p>\r\n                        <ngx-chart10></ngx-chart10>\r\n                    </nb-card>\r\n                </nb-card-front>\r\n                <nb-card-back>\r\n                    <nb-card class=\"card-leg card-leg-chrt10\">\r\n                        <div class=\"legend\">\r\n                            <ul>\r\n                                <li><i></i> Безопасные</li>\r\n                                <li><i></i> Потенциально небезопасные</li>\r\n                                <li><i></i> Опасные</li>\r\n                            </ul>\r\n                        </div>\r\n                    </nb-card>\r\n                </nb-card-back>\r\n            </nb-reveal-card>\r\n            <!-- <nb-card class=\"has-card-distance has-card-border card3\">\r\n                <p class=\"chart-label\">Chart 10 | Статистика по работе с файлами</p>\r\n                <ngx-chart10></ngx-chart10>\r\n            </nb-card> -->\r\n        </div>\r\n\r\n        <div [class]=\"(isSmallScreen|| isTabletScreen||isXSmallScreen)?'col-12':'col-7'\">\r\n            <nb-card class=\"has-card-distance has-card-border card4\">\r\n                <p class=\"chart-label\">Активность пользователя (курсор) за прошедшую неделю</p>\r\n                <ngx-chart13></ngx-chart13>\r\n            </nb-card>\r\n        </div>\r\n    </div>\r\n  <!-- <mat-grid-list cols=\"12\" rowHeight=\"2:1\">\r\n    <mat-grid-tile\r\n      [colspan]=\"isSmallScreen || isTabletScreen || isXSmallScreen ? 12 : 4\"\r\n      [rowspan]=\"isSmallScreen || isTabletScreen || isXSmallScreen ? 16 : 6\"\r\n    >\r\n      <ngx-chart11></ngx-chart11>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile\r\n      [colspan]=\"isSmallScreen || isTabletScreen || isXSmallScreen ? 12 : 8\"\r\n      [rowspan]=\"isSmallScreen || isTabletScreen || isXSmallScreen ? 16 : 6\"\r\n    >\r\n      <ngx-chart12 style=\"width: 100%\"></ngx-chart12>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile\r\n      [colspan]=\"isSmallScreen || isTabletScreen || isXSmallScreen ? 12 : 4\"\r\n      [rowspan]=\"isSmallScreen || isTabletScreen || isXSmallScreen ? 16 : 6\"\r\n      style=\"padding: auto\"\r\n    >\r\n      <ngx-chart10 style=\"width: 70%; height: 70%\"></ngx-chart10>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile\r\n      [colspan]=\"isSmallScreen || isTabletScreen || isXSmallScreen ? 12 : 8\"\r\n      [rowspan]=\"isSmallScreen || isTabletScreen || isXSmallScreen ? 16 : 6\"\r\n    >\r\n      <ngx-chart13 style=\"width: 100%\"></ngx-chart13>\r\n    </mat-grid-tile>\r\n  </mat-grid-list> -->\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { FileInfo } from '../viewData/data&query/data';\r\nimport { DataGenerator } from '../viewData/generateData';\r\n\r\n@Component({\r\n  selector: 'ngx-documents',\r\n  templateUrl: './documents.component.html',\r\n  styleUrls: ['./documents.component.scss']\r\n})\r\nexport class DocumentsComponent {\r\n\r\n  data: FileInfo[] = [];\r\n  constructor() { \r\n    this.data.push(...DataGenerator.createFileInfo(30, \"document\", [\"doc\", \"json\", \"xlsx\"]));\r\n  }\r\n\r\n\r\n  \r\n  viewTable: boolean = true;\r\n  // Изменение отображения\r\n  // Карточки VS таблица\r\n  switchViewApproach(viewTable: boolean) {\r\n    this.viewTable = viewTable;\r\n  }\r\n}\r\n","<div>\r\n    <div style=\"float: right; position: absolute; right: 3%;\">\r\n        <button nbButton ghost size='large' status=\"primary\" \r\n                (click)=\"switchViewApproach(true)\" [disabled]=\"viewTable\"><nb-icon icon=\"menu-outline\"></nb-icon></button>\r\n        <button nbButton ghost size='large' status=\"primary\" \r\n                (click)=\"switchViewApproach(false)\" [disabled]=\"!viewTable\"><nb-icon icon=\"grid-outline\"></nb-icon></button>\r\n    </div>\r\n    <div *ngIf=\"viewTable;else viewCard\">\r\n        <documents-table [tag]=\"'img'\" [dataArr]=\"data\"></documents-table>\r\n    </div>\r\n    <ng-template #viewCard>\r\n        <div>\r\n            <documents-cards [tag]=\"'img'\" [dataArr]=\"data\"></documents-cards>\r\n        </div>\r\n    </ng-template>\r\n</div>","import { Component } from '@angular/core';\r\n\r\nimport { FileInfo } from '../viewData/data&query/data';\r\nimport { DataGenerator } from '../viewData/generateData';\r\nimport { folderInfo } from '../../files/files.component';\r\n\r\n@Component({\r\n  selector: 'ngx-downloads',\r\n  templateUrl: './downloads.component.html',\r\n  styleUrls: ['./downloads.component.scss']\r\n})\r\nexport class DownloadsComponent  {\r\n\r\n  files: folderInfo[] = [];\r\n  extensions: string[][] = [\r\n    [\"zip\", \"rar\"], \r\n    [\"doc\"], \r\n    [\"xlsx\"],\r\n    [\"pdf\"],\r\n    [\"png\", \"jpeg\", \"bmp\", \"gif\"],\r\n    [\"mp3\", \"wav\"] ,\r\n    [\"zip\", \"rar\"], \r\n    [\"doc\"], \r\n    [\"xlsx\"],\r\n    [\"pdf\"],\r\n    [\"png\", \"jpeg\", \"bmp\", \"gif\"],\r\n    [\"mp3\", \"wav\"] \r\n  ];\r\n  folderNames: string[] = [\"Архивы\", \"Word файлы\", \"Excel файлы\", \"Pdf файлы\", \"Фото\", \"Музыка\"];\r\n\r\n  data: FileInfo[] = [];\r\n  constructor() { \r\n    this.data.push(...DataGenerator.createFileInfo(30, \"file_\", [\"png\", \"jpeg\", \"bmp\", \"doc\", \"json\", \"exe\", \"gif\", \"xlsx\"]));\r\n    \r\n    for (let i = 0; i < this.folderNames.length; i++) {\r\n      this.files.push({\r\n        folderName: this.folderNames[i],\r\n        extensions: this.extensions[i],\r\n        amount: `${Math.floor(Math.random()*1000)}`, \r\n        totalVolume:`${Math.floor(Math.random()*1000)}`\r\n      })\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  viewTable: boolean = true;\r\n  // Изменение отображения\r\n  // Карточки VS таблица\r\n  switchViewApproach(viewTable: boolean) {\r\n    this.viewTable = viewTable;\r\n  }\r\n}\r\n","<div>\r\n\r\n    <h2 *ngIf=\"viewTable\">Папки</h2>\r\n    <nb-card *ngIf=\"viewTable\" style=\"box-shadow: none; border:none\">\r\n        <div class=\"folders row\">\r\n            <nb-card class=\"showFolder\" *ngFor=\"let item of files\">\r\n                <nb-card-header>\r\n                    <nb-icon icon=\"folder-outline\"></nb-icon>\r\n                    {{item.folderName}}\r\n                </nb-card-header>\r\n                <nb-card-body>\r\n                    Файлов: {{item.amount}} ; Размер: {{item.totalVolume}}мб\r\n                </nb-card-body>\r\n                <nb-card-footer>\r\n                    <span class=\"extensions\" *ngFor=\"let ext of item.extensions\">\r\n                        .{{ext}}\r\n                    </span>\r\n                </nb-card-footer>\r\n            </nb-card>\r\n        </div>\r\n    </nb-card>\r\n\r\n    \r\n    <div *ngIf=\"viewTable;else viewCard\">\r\n        <h2>Недавно добавленные</h2>\r\n        <div style=\"float: right; position: absolute; right: 3%; z-index: 999;\">\r\n            <button nbButton ghost size='large' status=\"primary\" \r\n                    (click)=\"switchViewApproach(true)\" [disabled]=\"viewTable\"><nb-icon icon=\"menu-outline\"></nb-icon></button>\r\n            <button nbButton ghost size='large' status=\"primary\" \r\n                    (click)=\"switchViewApproach(false)\" [disabled]=\"!viewTable\"><nb-icon icon=\"grid-outline\"></nb-icon></button>\r\n        </div>\r\n        <div class=\"row\">\r\n            <documents-table [tag]=\"'img'\" [dataArr]=\"data\"></documents-table>\r\n        </div>\r\n    </div>\r\n    <ng-template #viewCard>\r\n        <div>\r\n            <documents-cards [tag]=\"'img'\" [dataArr]=\"data\"></documents-cards>\r\n        </div>\r\n    </ng-template>\r\n</div>","import { Observable } from 'rxjs';\r\nimport { ServerService, Keylog } from './../../../server.service';\r\nimport { Component, OnInit, Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { from } from 'rxjs';\r\n@Component({\r\n  selector: 'ngx-keylog',\r\n  templateUrl: './keylog.component.html',\r\n  styleUrls: ['./keylog.component.scss']\r\n})\r\nexport class KeylogComponent implements OnInit {\r\n\r\n  keyLogger: string[] = [];\r\n  media;\r\n\r\n  constructor(private server : ServerService) { }\r\n  ngOnInit(){\r\n    this.server.telecast.subscribe((resp )=>{\r\n      this.media = this.server.getProxy(resp).pipe(this.server.decodefrom64());\r\n      // this.screenshots.subscribe(files => this.screens = files);\r\n    })\r\n  }\r\n\r\n}\r\n","<nb-card>\r\n    {{media |async }}\r\n  </nb-card>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nexport interface Password {\r\n    URL: string,\r\n    password: string,\r\n    safety: string[],\r\n    showPassword: boolean\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-proxy',\r\n  templateUrl: './passwords.component.html',\r\n  styleUrls: ['./passwords.component.scss']\r\n})\r\nexport class PasswordsComponent implements OnInit {\r\n\r\n    URLs: string[] = [\r\n        'https://mail.google.com', \r\n        'https://outlook.office365.com', \r\n        'https://github.com', \r\n        'https://trello.com',\r\n        'https://idroo.com',\r\n        'https://app.zeplin.io',\r\n        'https://icons8.com/'\r\n    ];\r\n        \r\n    passwords: Password[] = [];\r\n    allPasswords: Password[] = [];\r\n\r\n    makePassword(): string  {\r\n        var variants = \"0123456789\" + \"abcdefghijklmnopqrstuvwxyz\" + \"abcdefghijklmnopqrstuvwxyz\".toLocaleUpperCase();\r\n        let result = '';\r\n        let amount = 5 + Math.floor(Math.random()*10)\r\n\r\n        for( var i = 0; i < amount; i++ )\r\n            result += variants.charAt(Math.floor(Math.random() * variants.length));\r\n\r\n        return result;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        let password: string;\r\n\r\n        for (let i = 0; i < this.URLs.length; i++) {\r\n            password = this.makePassword();\r\n            \r\n            this.passwords.push({\r\n                URL: this.URLs[i], \r\n                password: password,\r\n                safety: this.isLegalPassword(password),\r\n                showPassword: false\r\n            });\r\n\r\n        }\r\n        this.allPasswords = this.passwords \r\n    }  \r\n\r\n    getInputType(password) {\r\n        return !password.showPassword ? 'password' : 'text';\r\n    }\r\n\r\n    toggleShowPassword(password) {\r\n        password.showPassword = !password.showPassword;\r\n    }\r\n\r\n    isLegalPassword(pass: string): string[] {\r\n        let result: string[] = [];\r\n\r\n        if (!pass.match(\".*[A-Z].*\")) result.push('Не содержит заглавных букв');\r\n        if (!pass.match(\".*[a-z].*\")) result.push('Не содержит строчных букв');\r\n        if (!pass.match(\".*\\\\d.*\")) result.push('Не содержит цифр');\r\n        // if (!pass.match(\".*[~!.......].*\")) result.push('Пароль слишком короткий');'\r\n        if (pass.length < 8) result.push('Пароль слишком короткий');\r\n        if (this.passwords.filter(p => p.password == pass).length > 1) result.push('Пароль повтояется');\r\n\r\n        return result;  \r\n    }\r\n\r\n    filterPasswords() {\r\n        this.passwords = this.allPasswords.filter(pass => pass.URL.match(\"^.*\" + (document.querySelector('#searchPass') as HTMLInputElement).value + \".*$\"));\r\n    }\r\n}\r\n","<div class=\"row grid-show\">\r\n    <nb-form-field>\r\n        <nb-icon nbPrefix icon=\"search-outline\" pack=\"eva\"></nb-icon>\r\n        <input id=\"searchPass\" (input)=\"filterPasswords()\" fieldSize=\"large\" placeholder=\"Large\" fullWidth type=\"text\" nbInput shape=\"round\" placeholder=\"Поиск по сайтам\" />\r\n    </nb-form-field>\r\n\r\n    <!-- Сгенерированная данные -->\r\n    <nb-card *ngFor=\"let password of passwords\">\r\n        <nb-card-header>\r\n            <h6>\r\n                <a style=\"text-decoration: none; color: royalblue;\" href=\"{{password.URL}}\">{{password.URL}}</a>\r\n            </h6>\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n        \r\n            <input [type]=\"getInputType(password)\" value=\"{{password.password}}\" nbInput disabled\r\n            style=\"color: black !important;\">\r\n            <button nbSuffix nbButton ghost (click)=\"toggleShowPassword(password)\">\r\n                <nb-icon [icon]=\"password.showPassword ? 'eye-outline' : 'eye-off-2-outline'\" pack=\"eva\"\r\n                            [attr.aria-label]=\"password.showPassword ? 'hide password' : 'show password'\">\r\n                </nb-icon>\r\n            </button>\r\n         \r\n        </nb-card-body>\r\n        <nb-card-footer>\r\n            <p><b>Защищённость пароля:</b></p>\r\n            <nb-list *ngIf=\"password.safety.length != 0; else noTroubles\">\r\n                <nb-list-item *ngFor=\"let trouble of password.safety\">\r\n                    <nb-icon style=\"margin-right: 1rem\" status=\"danger\" icon=\"alert-triangle-outline\" pack=\"eva\">\r\n                    </nb-icon>\r\n                    {{ trouble }}\r\n                </nb-list-item>\r\n            </nb-list>\r\n            <ng-template #noTroubles>\r\n                <p>\r\n                    <nb-icon style=\"margin-right: 0.75rem\" status=\"success\" icon=\"checkmark-outline\" pack=\"eva\">\r\n                    </nb-icon>\r\n                    Пароль безопасен\r\n                </p>\r\n            </ng-template>\r\n\r\n            <!-- <p>Кол-во символов  {{password.password.length}}</p> -->\r\n        </nb-card-footer>\r\n    </nb-card>\r\n</div>","import { ServerService } from './../../../server.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-proxy',\r\n  templateUrl: './proxy.component.html',\r\n  styleUrls: ['./proxy.component.scss']\r\n})\r\nexport class ProxyComponent implements OnInit {\r\n\r\n  proxyHistory: string[] = [];\r\n\r\n  media: any;\r\n\r\n  constructor(private server: ServerService) { }\r\n\r\n  ngOnInit(): void {\r\n    for (let i = 0; i < 10; i++) {\r\n      // this.proxyHistory.push(`${i}`);\r\n    }\r\n    this.server.telecast.subscribe((resp )=>{\r\n      this.media = this.server.getKeylogForUser(resp).pipe(this.server.decodefrom64());\r\n      // this.screenshots.subscribe(files => this.screens = files);\r\n    })\r\n    // Здесь должна быть логика запроса на сервер\r\n  }\r\n}\r\n","<div>\r\n    {{media |async}}\r\n</div>\r\n","import { Observable } from 'rxjs';\r\nimport { ServerService, Media } from './../../../server.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { FileInfo } from '../viewData/data&query/data';\r\nimport { DataGenerator } from '../viewData/generateData';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-screenshots',\r\n  templateUrl: './screenshots.component.html',\r\n  styleUrls: ['./screenshots.component.scss']\r\n})\r\nexport class ScreenshotsComponent implements OnInit {\r\n\r\n  media : Observable<Media>;\r\n  data: FileInfo[] = [];\r\n  // screens: Screenshots;\r\n\r\n  constructor(private server: ServerService) {\r\n    this.data.push(...DataGenerator.createFileInfo(40, \"screen_\", [\"png\", \"jpeg\", \"bmp\", \"gif\"]));\r\n  }\r\n\r\nngOnInit(){\r\n  this.server.telecast.subscribe((resp )=>{\r\n    this.media = this.server.getScreenShotsForUser(resp);\r\n    // this.screenshots.subscribe(files => this.screens = files);\r\n  })\r\n}\r\n  viewTable: boolean = true;\r\n  // Изменение отображения\r\n  // Карточки VS таблица\r\n  switchViewApproach(viewTable: boolean) {\r\n    this.viewTable = viewTable;\r\n  }\r\n}\r\n","<div>\r\n    <div style=\"float: right; position: absolute; right: 3%;\">\r\n        <button nbButton ghost size='large' status=\"primary\"\r\n                (click)=\"switchViewApproach(true)\" [disabled]=\"viewTable\"><nb-icon icon=\"menu-outline\"></nb-icon></button>\r\n        <button nbButton ghost size='large' status=\"primary\"\r\n                (click)=\"switchViewApproach(false)\" [disabled]=\"!viewTable\"><nb-icon icon=\"grid-outline\"></nb-icon></button>\r\n    </div>\r\n    <div *ngIf=\"viewTable;else viewCard\">\r\n        <!-- {{screenshots |async | json}} -->\r\n        <documents-table [tag]=\"'img'\" [dataArr]=\"[]\" [screenArr]=\"media \"></documents-table>\r\n    </div>\r\n    <ng-template #viewCard>\r\n        <div>\r\n            <documents-cards [tag]=\"'img'\" [dataArr]=\"[]\" [screenArr]=\"media \"></documents-cards>\r\n        </div>\r\n    </ng-template>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-terminal',\r\n  templateUrl: './terminal.component.html',\r\n  styleUrls: ['./terminal.component.scss']\r\n})\r\nexport class TerminalComponent  {\r\n\r\n  cmdHistory: string[] = new Array();\r\n  \r\n  constructor() { }\r\n  \r\n  command_history: string[];\r\n  current_path: string = \"> \";\r\n\r\n  onChange(event: KeyboardEvent) {\r\n    if (event.key != \"Enter\") return;\r\n    \r\n    // Сохраняем введённое\r\n    let allCommands = document.querySelectorAll('input');\r\n    let command = allCommands[allCommands.length - 1].value;\r\n    allCommands[allCommands.length - 1].value = \"\";\r\n    \r\n    this.cmdHistory.push(command);\r\n\r\n\r\n    // ОТВЕТ\r\n    this.cmdHistory.push(`${this.current_path} -- тут ответ`);\r\n  }\r\n  // Сделать здесь список команд и обработчиков. Обрабатывать при нажатии [Enter]\r\n\r\n  // Можно сделать с помощью этой штуки. Аналог shift\r\n  // https://akveo.github.io/nebular/docs/components/autocomplete/overview#nbautocompletedirective\r\n\r\n}\r\n","<div id=\"terminal\">\r\n    <p>Используйте любые команды для Windows</p>\r\n    <!-- История сообщений -->\r\n    <ul>\r\n        <li *ngFor=\"let command of cmdHistory\">\r\n            {{command}}\r\n        </li>\r\n    </ul>\r\n    <!-- Поле для ввода -->\r\n    <span>{{current_path}}</span><input type=\"text\" (keypress)=\"onChange($event)\" autofocus>\r\n\r\n</div>\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport {UsersComponent} from './users.component'\r\nimport {DefaultComponent} from './default/default.component'\r\nimport { DownloadsComponent } from './downloads/downloads.component';\r\nimport { ScreenshotsComponent } from './screenshots/screenshots.component';\r\nimport { VideosComponent } from './videos/videos.component';\r\nimport { DocumentsComponent } from './documents/documents.component';\r\nimport { ProxyComponent } from './proxy/proxy.component';\r\nimport { TerminalComponent } from './terminal/terminal.component';\r\nimport { KeylogComponent } from './keylog/keylog.component';\r\nimport { PasswordsComponent } from './passwords/passwords.component';\r\n\r\nconst routes: Routes = [{\r\n\r\n  path: '',\r\n  component: UsersComponent,\r\n  children: [\r\n      {\r\n        path: 'passwords',\r\n        component: PasswordsComponent,\r\n      }, {\r\n        path: 'keylog',\r\n        component: KeylogComponent,\r\n      }, {\r\n        path: 'videos',\r\n        component: VideosComponent,\r\n      }, {\r\n        path: 'terminal',\r\n        component: TerminalComponent,\r\n      }, {\r\n        path: 'screenshots',\r\n        component: ScreenshotsComponent,\r\n      }, {\r\n        path: 'proxy',\r\n        component: ProxyComponent,\r\n      }, {\r\n        path: 'downloads',\r\n        component: DownloadsComponent,\r\n      }, {\r\n        path: 'documents',\r\n        component: DocumentsComponent,\r\n      }, {\r\n        path: 'default',\r\n        component: DefaultComponent,\r\n      }, {\r\n        path: '',\r\n        redirectTo: 'default',\r\n        pathMatch: 'full',\r\n      },\r\n  ],\r\n},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UsersRoutingModule {\r\n}\r\n","import { AfterContentInit } from '@angular/core';\r\nimport { ServerService, User } from './../../server.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { NbSidebarService } from '@nebular/theme';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  IsChangeUsersLayOut:boolean = false;\r\n  // сайд-панель юзеров переход на телефон\r\n  ChangeUsersLayOut(){\r\n    this.IsChangeUsersLayOut = !this.IsChangeUsersLayOut;\r\n  }\r\n\r\n  users: any;\r\n\r\n  isTabletScreen;\r\n  isSmallScreen;\r\n  isXSmallScreen;\r\n  isMediumScreen;\r\n\r\n  ngOnInit(){\r\n\r\n    this.breakpointObserver\r\n    .observe(Breakpoints.Small)\r\n    .subscribe((resp) => (this.isSmallScreen = resp.matches));\r\n    this.breakpointObserver\r\n    .observe(Breakpoints.Medium)\r\n    .subscribe((resp) => (this.isMediumScreen = resp.matches));\r\n  this.breakpointObserver\r\n    .observe(Breakpoints.Tablet)\r\n    .subscribe((resp) => (this.isTabletScreen = resp.matches));\r\n  this.breakpointObserver\r\n    .observe(Breakpoints.XSmall)\r\n    .subscribe((resp) => (this.isXSmallScreen = resp.matches));\r\n  }\r\n\r\n  menu: {title: string, url: string, routerLink: string, active: boolean}[] = [\r\n    {title: 'Загрузки',  url: '../../../assets/images/user-actions/31996.svg', routerLink: '/pages/users/downloads',   active: false},\r\n    {title: 'Скриншоты', url: '../../../assets/images/user-actions/31997.svg', routerLink: '/pages/users/screenshots', active: false},\r\n    {title: 'Видео',     url: '../../../assets/images/user-actions/32001.svg', routerLink: '/pages/users/videos',      active: false},\r\n    {title: 'Пароли',    url: '../../../assets/images/user-actions/12.svg', routerLink: '/pages/users/passwords',   active: false},\r\n    {title: 'Кейлоггер', url: '../../../assets/images/user-actions/31995.svg', routerLink: '/pages/users/keylog',      active: false},\r\n    {title: 'Документы', url: '../../../assets/images/user-actions/31998.svg', routerLink: '/pages/users/documents',   active: false},\r\n    {title: 'Proxy',     url: '../../../assets/images/user-actions/31999.svg', routerLink: '/pages/users/proxy',       active: false},\r\n    {title: 'Терминал',  url: '../../../assets/images/user-actions/32000.svg', routerLink: '/pages/users/terminal',    active: false},\r\n  ];\r\n\r\n  firstTime: boolean = true;\r\n  public MAINUSER:string;\r\n\r\n  screenWidth: number = screen.width;\r\n  screenHeight: number = screen.height;\r\n  onResize() {\r\n    this.screenWidth = screen.width;\r\n    this.screenHeight = screen.height;\r\n  }\r\n\r\n  constructor(public server: ServerService,\r\n    public router: Router,\r\n    private breakpointObserver:BreakpointObserver,\r\n    private sidebarService: NbSidebarService) {\r\n      server.getAllUsers();\r\n    }\r\n\r\n  GetUserToRoute(uuid:string,user:User){\r\n    if (this.firstTime && uuid == this.server.allusers[0].uuid) {\r\n      return;\r\n    }\r\n    this.firstTime = false;\r\n    this.MAINUSER = uuid;\r\n    this.server.editUuid(uuid);\r\n    this.server.editUser(user);\r\n    this.router.navigate(['/pages/users/default']);\r\n    this.menu.forEach(element => {\r\n      element.active = false;\r\n    });\r\n  }\r\n\r\n  sectionClick(section)\r\n  {\r\n    if (section.active) {\r\n      this.server.editUuid(this.MAINUSER);\r\n      this.router.navigate(['/pages/users/default']);\r\n      section.active = false;\r\n      return;\r\n    }\r\n    this.menu.forEach(element => {\r\n      element.active = false;\r\n    });\r\n    section.active = true;\r\n  }\r\n\r\n  filterUsers() {\r\n    this.users = this.server.allusers.filter(user => (user.full_name + user.role).toLowerCase().match(\"^.*\" + (document.querySelector('#searchUsers') as HTMLInputElement).value.toLowerCase() + \".*$\"));\r\n  }\r\n  filterUsersBySpecialty(selected) {\r\n\r\n    if (selected == 'любая')\r\n      this.users = this.server.allusers;\r\n    else\r\n      this.users = this.server.allusers.filter(user => user.role == selected);\r\n\r\n\r\n  }\r\n}\r\n","<div (window:resize)=\"onResize()\" class=\"row\"\r\n  style=\"box-shadow: -4px 4px 10px 0 rgba(25, 42, 70, 0.13)\">\r\n\r\n  <div [style]=\"(isSmallScreen || isMediumScreen || isTabletScreen || isXSmallScreen) && IsChangeUsersLayOut ? 'position: absolute;z-index: 1000;box-shadow:0px 0px 15px 5px rgba(25, 42, 70, 0.13);':''\"\r\n        *ngIf=\"!(isSmallScreen || isMediumScreen || isTabletScreen || isXSmallScreen) || IsChangeUsersLayOut\"\r\n    [class]=\"(isSmallScreen || isMediumScreen || isTabletScreen || isXSmallScreen) && IsChangeUsersLayOut ?'':'col-3 search'\"\r\n  >\r\n    <nb-card  class=\"search-card\">\r\n      <nb-card-header style=\"display: flex; justify-content: space-between;\">\r\n        <button style=\"margin-right: 1rem;\" (click)=\"ChangeUsersLayOut()\" size=\"large\" nbButton *ngIf=\"(isSmallScreen || isMediumScreen || isTabletScreen || isXSmallScreen)&& IsChangeUsersLayOut\" status=\"info\"><nb-icon icon=\"arrow-ios-back-outline\"></nb-icon></button>\r\n\r\n        <nb-form-field>\r\n          <nb-icon nbPrefix icon=\"search-outline\" pack=\"eva\"></nb-icon>\r\n          <input\r\n            id=\"searchUsers\"\r\n            (input)=\"filterUsers()\"\r\n            fieldSize=\"large\"\r\n            placeholder=\"Large\"\r\n            fullWidth\r\n            type=\"text\"\r\n            nbInput\r\n            shape=\"round\"\r\n            placeholder=\"Поиск\"\r\n          />\r\n        </nb-form-field>\r\n      </nb-card-header>\r\n      <nb-card-body style=\"padding: 1rem 0rem; \"><!-- max-height: 40vh; -->\r\n        <nb-select\r\n          size=\"tiny\"\r\n          nbPrefix\r\n          icon=\"search-outline\"\r\n          fullWidth\r\n          placeholder=\"Специальность\"\r\n          value=\"Специальность\"\r\n          style=\"font-size: 1rem !important\"\r\n        >\r\n          <nb-option (click)=\"filterUsersBySpecialty('любая')\"\r\n            value=\"index\"\r\n            style=\"font-size: 1rem !important\"\r\n            >любая</nb-option>\r\n          <nb-option (click)=\"filterUsersBySpecialty(user.role)\"\r\n            *ngFor=\"let user of server.allusers; let index = index\"\r\n            value=\"index\"\r\n            style=\"font-size: 1rem !important\"\r\n            >{{ user.role }}</nb-option>\r\n        </nb-select>\r\n\r\n        <nb-accordion *ngIf=\"server.allusers && !users\">\r\n          <nb-accordion-item *ngFor=\"let user of server.allusers\">\r\n            <nb-accordion-item-header\r\n              (click)=\"GetUserToRoute(user.uuid,user)\"\r\n              style=\"justify-content: space-between\"\r\n              [ngClass]=\"{\r\n                activeUser:\r\n                  user.uuid == MAINUSER ||\r\n                  (server.allusers[0].uuid == user.uuid && firstTime)\r\n              }\"\r\n            >\r\n              <nb-user\r\n                badgeText=\"▢\"\r\n                size=\"giant\"\r\n                badgeStatus=\"success\"\r\n                badgePosition=\"bottom right\"\r\n                [name]=\"user.full_name\"\r\n                [title]=\"user.role\"\r\n                [picture]=\"server.HOST + user.photo\"\r\n              >\r\n              </nb-user>\r\n              <div style=\"padding-right: 20px\">\r\n                <nb-icon status=\"warning\" icon=\"star\" pack=\"eva\"></nb-icon>\r\n              </div>\r\n            </nb-accordion-item-header>\r\n            <nb-accordion-item-body>\r\n              <ul class=\"widget-timeline mb-0\">\r\n                <li class=\"timeline-items timeline-icon-primary active\">\r\n                  <div class=\"timeline-time\">2 часа назад</div>\r\n                  <h6 class=\"timeline-title\">Добавлен файл</h6>\r\n                  <div class=\"timeline-content\">\r\n                    <nb-icon\r\n                      status=\"primary\"\r\n                      style=\"margin-right: 2px\"\r\n                      icon=\"file-text-outline\"\r\n                    ></nb-icon>\r\n                    Order.pdf\r\n                  </div>\r\n                </li>\r\n                <li class=\"timeline-items timeline-icon-primary active\">\r\n                  <div class=\"timeline-time\">3 часа назад</div>\r\n                  <h6 class=\"timeline-title\">Удален файл</h6>\r\n                  <div class=\"timeline-content\">\r\n                    <nb-icon\r\n                      status=\"danger\"\r\n                      style=\"margin-right: 2px\"\r\n                      icon=\"file-text-outline\"\r\n                    ></nb-icon\r\n                    >Invoices.pdf\r\n                  </div>\r\n                </li>\r\n                <li class=\"timeline-items timeline-icon-primary active\">\r\n                  <div class=\"timeline-time\">12 часов назад</div>\r\n                  <h6 class=\"timeline-title\">Отключена сеть</h6>\r\n                  <div class=\"timeline-content\">\r\n                    <nb-icon\r\n                      status=\"danger\"\r\n                      style=\"margin-right: 2px\"\r\n                      icon=\"flash-off-outline\"\r\n                    ></nb-icon>\r\n                    корпоративный пк\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </nb-accordion-item-body>\r\n          </nb-accordion-item>\r\n        </nb-accordion>\r\n\r\n        <nb-accordion *ngIf=\"users\">\r\n          <nb-accordion-item *ngFor=\"let user of users\">\r\n            <nb-accordion-item-header\r\n              (click)=\"GetUserToRoute(user.uuid,user)\"\r\n              style=\"justify-content: space-between\"\r\n              [ngClass]=\"{\r\n                activeUser:\r\n                  user.uuid == MAINUSER ||\r\n                  (server.allusers[0].uuid == user.uuid && firstTime)\r\n              }\"\r\n            >\r\n              <nb-user\r\n                badgeText=\"▢\"\r\n                size=\"giant\"\r\n                badgeStatus=\"success\"\r\n                badgePosition=\"bottom right\"\r\n                [name]=\"user.full_name\"\r\n                [title]=\"user.role\"\r\n                [picture]=\"server.HOST + user.photo\"\r\n              >\r\n              </nb-user>\r\n              <div style=\"padding-right: 20px\">\r\n                <nb-icon status=\"warning\" icon=\"star\" pack=\"eva\"></nb-icon>\r\n              </div>\r\n            </nb-accordion-item-header>\r\n            <nb-accordion-item-body>\r\n              <ul class=\"widget-timeline mb-0\">\r\n                <li class=\"timeline-items timeline-icon-primary active\">\r\n                  <div class=\"timeline-time\">2 часа назад</div>\r\n                  <h6 class=\"timeline-title\">Добавлен файл</h6>\r\n                  <div class=\"timeline-content\">\r\n                    <nb-icon\r\n                      status=\"primary\"\r\n                      style=\"margin-right: 2px\"\r\n                      icon=\"file-text-outline\"\r\n                    ></nb-icon>\r\n                    Order.pdf\r\n                  </div>\r\n                </li>\r\n                <li class=\"timeline-items timeline-icon-primary active\">\r\n                  <div class=\"timeline-time\">3 часа назад</div>\r\n                  <h6 class=\"timeline-title\">Удален файл</h6>\r\n                  <div class=\"timeline-content\">\r\n                    <nb-icon\r\n                      status=\"danger\"\r\n                      style=\"margin-right: 2px\"\r\n                      icon=\"file-text-outline\"\r\n                    ></nb-icon\r\n                    >Invoices.pdf\r\n                  </div>\r\n                </li>\r\n                <li class=\"timeline-items timeline-icon-primary active\">\r\n                  <div class=\"timeline-time\">12 часов назад</div>\r\n                  <h6 class=\"timeline-title\">Отключена сеть</h6>\r\n                  <div class=\"timeline-content\">\r\n                    <nb-icon\r\n                      status=\"danger\"\r\n                      style=\"margin-right: 2px\"\r\n                      icon=\"flash-off-outline\"\r\n                    ></nb-icon>\r\n                    корпоративный пк\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </nb-accordion-item-body>\r\n          </nb-accordion-item>\r\n        </nb-accordion>\r\n      </nb-card-body>\r\n      <nb-card-footer>\r\n        <p class=\"styles_logoTitle__1Kvzk\">\r\n          <b>+ добавить избранных пользователей</b>\r\n        </p>\r\n      </nb-card-footer>\r\n    </nb-card>\r\n  </div>\r\n\r\n  <div\r\n    [class]=\"isSmallScreen || isMediumScreen || isTabletScreen || isXSmallScreen ? 'col-12 content' : 'col-9 content'\"\r\n    [style]=\"screenWidth > 575 ? ' ' : 'padding: 0px'\">\r\n    <nb-card class=\"content-card\">\r\n      <nb-card-header fixed>\r\n        <ng-template [ngIf]=\"!(isMediumScreen || isSmallScreen || isTabletScreen || isXSmallScreen)\" [ngIfElse]=\"gridPhotoPhone\">\r\n          <div style=\"\r\n              display: grid;\r\n              grid-template-columns: repeat(8, 1fr);\r\n              justify-items: center;\"\r\n          >\r\n            <div *ngFor=\"let section of menu\">\r\n              <a\r\n                style=\"text-decoration: none\"\r\n                [routerLink]=\"section.routerLink\"\r\n                (click)=\"sectionClick(section)\"\r\n              >\r\n                <img\r\n                  [src]=\"section.url\"\r\n                  [ngClass]=\"{ activeUser: section.active }\"\r\n                />\r\n                <p>{{ section.title }}</p>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template #gridPhotoPhone>\r\n          <div style=\"display: flex; justify-content: space-between\">\r\n            <div class=\"dropdown\">\r\n              <button\r\n                class=\"btn btn-secondary dropdown-toggle\"\r\n                type=\"button\"\r\n                id=\"dropdownMenuButton\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Действия\r\n              </button>\r\n\r\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                <a\r\n                  style=\"text-decoration: none\"\r\n                  *ngFor=\"let section of menu\"\r\n                  class=\"dropdown-item\"\r\n                  [routerLink]=\"section.routerLink\"\r\n                  >{{ section.title }}</a\r\n                >\r\n              </div>\r\n            </div>\r\n            <button\r\n            [disabled]=\"IsChangeUsersLayOut\"\r\n              type=\"button\"\r\n              (click)=\"ChangeUsersLayOut()\"\r\n              class=\"btn btn-primary\"\r\n            >\r\n              Пользователи\r\n            </button>\r\n          </div>\r\n        </ng-template>\r\n      </nb-card-header>\r\n      <nb-card-body style=\"min-height: 60vh;\">\r\n        <router-outlet></router-outlet>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- <div >\r\n<mat-grid-list style=\"width: 100%;height: 100%;\" cols=\"8\" rowHeight=\"2:1\">\r\n  <mat-grid-tile\r\n    [colspan]=\"2\"\r\n    [rowspan]=\"8\">\r\n    <nb-card class=\"search-card\">\r\n      <nb-card-header>\r\n          <nb-form-field>\r\n              <nb-icon nbPrefix icon=\"search-outline\" pack=\"eva\"></nb-icon>\r\n              <input id=\"searchUsers\" (input)=\"filterUsers()\" fieldSize=\"large\" placeholder=\"Large\" fullWidth type=\"text\" nbInput shape=\"round\" placeholder=\"Поиск\" />\r\n          </nb-form-field>\r\n      </nb-card-header>\r\n      <nb-card-body>\r\n          <nb-select size=\"tiny\" nbPrefix icon=\"search-outline\" fullWidth placeholder=\"Специальность\" style=\"font-size: 1rem\">\r\n              <nb-icon *ngIf=\"server.allusers\" nbPrefix icon=\"search-outline\" pack=\"eva\"></nb-icon>\r\n              <nb-option *ngFor=\"let user of server.allusers;let index = index \" value=\"index\" style=\"font-size: 1rem\">{{user.role}}</nb-option>\r\n          </nb-select>\r\n\r\n          <nb-accordion *ngIf=\"server.allusers && !users\">\r\n              <nb-accordion-item *ngFor=\"let user of server.allusers\">\r\n                  <nb-accordion-item-header (click)=\"GetUserToRoute(user.uuid)\" style=\"justify-content: space-between;\" [ngClass]=\"{activeUser: user.uuid == MAINUSER || (server.allusers[0].uuid == user.uuid && firstTime)}\">\r\n                      <nb-user badgeText=\"▢\" size=\"giant\" badgeStatus=\"success\" badgePosition=\"bottom right\" [name]=\"user.full_name\" [title]=\"user.role\" [picture]=\" server.HOST + user.photo\">\r\n                      </nb-user>\r\n                      <div style=\"padding-right: 20px;\">\r\n                          <nb-icon status=\"warning\" icon=\"star\" pack=\"eva\"></nb-icon>\r\n                      </div>\r\n\r\n                  </nb-accordion-item-header>\r\n                  <nb-accordion-item-body>\r\n                    <ul class=\"widget-timeline mb-0\">\r\n                      <li class=\"timeline-items timeline-icon-primary active\">\r\n                          <div class=\"timeline-time\">2 часа назад</div>\r\n                          <h6 class=\"timeline-title\">Добавлен файл</h6>\r\n                          <div class=\"timeline-content\">\r\n                              <nb-icon status=\"primary\" style=\"margin-right: 2px;\" icon=\"file-text-outline\"></nb-icon> Order.pdf\r\n                          </div>\r\n                      </li>\r\n                      <li class=\"timeline-items timeline-icon-primary active\">\r\n                          <div class=\"timeline-time\">3 часа назад</div>\r\n                          <h6 class=\"timeline-title\">Удален файл</h6>\r\n                          <div class=\"timeline-content\">\r\n                            <nb-icon status=\"danger\" style=\"margin-right: 2px;\" icon=\"file-text-outline\"></nb-icon>Invoices.pdf\r\n                          </div>\r\n                      </li>\r\n                      <li class=\"timeline-items timeline-icon-primary active\">\r\n                        <div class=\"timeline-time\">12 часов назад</div>\r\n                        <h6 class=\"timeline-title\">Отключена сеть</h6>\r\n                        <div class=\"timeline-content\">\r\n                          <nb-icon status=\"danger\"style=\"margin-right: 2px;\" icon=\"flash-off-outline\"></nb-icon> корпоративный пк\r\n                        </div>\r\n                    </li>\r\n                  </ul>\r\n                  </nb-accordion-item-body>\r\n              </nb-accordion-item>\r\n          </nb-accordion>\r\n\r\n          <nb-accordion *ngIf=\"users\">\r\n              <nb-accordion-item *ngFor=\"let user of users\">\r\n                  <nb-accordion-item-header (click)=\"GetUserToRoute(user.uuid)\" style=\"justify-content: space-between;\" [ngClass]=\"{activeUser: user.uuid == MAINUSER || (server.allusers[0].uuid == user.uuid && firstTime)}\">\r\n                      <nb-user badgeText=\"▢\" size=\"giant\" badgeStatus=\"success\" badgePosition=\"bottom right\" [name]=\"user.full_name\" [title]=\"user.role\" [picture]=\" server.HOST + user.photo\">\r\n                      </nb-user>\r\n                      <div style=\"padding-right: 20px;\">\r\n                          <nb-icon status=\"warning\" icon=\"star\" pack=\"eva\"></nb-icon>\r\n                      </div>\r\n\r\n                  </nb-accordion-item-header>\r\n                  <nb-accordion-item-body>\r\n                    <ul class=\"widget-timeline mb-0\">\r\n                      <li class=\"timeline-items timeline-icon-primary active\">\r\n                          <div class=\"timeline-time\">2 часа назад</div>\r\n                          <h6 class=\"timeline-title\">Добавлен файл</h6>\r\n                          <div class=\"timeline-content\">\r\n                              <nb-icon status=\"primary\" style=\"margin-right: 2px;\" icon=\"file-text-outline\"></nb-icon> Order.pdf\r\n                          </div>\r\n                      </li>\r\n                      <li class=\"timeline-items timeline-icon-primary active\">\r\n                          <div class=\"timeline-time\">3 часа назад</div>\r\n                          <h6 class=\"timeline-title\">Удален файл</h6>\r\n                          <div class=\"timeline-content\">\r\n                            <nb-icon status=\"danger\" style=\"margin-right: 2px;\" icon=\"file-text-outline\"></nb-icon>Invoices.pdf\r\n                          </div>\r\n                      </li>\r\n                      <li class=\"timeline-items timeline-icon-primary active\">\r\n                        <div class=\"timeline-time\">12 часов назад</div>\r\n                        <h6 class=\"timeline-title\">Отключена сеть</h6>\r\n                        <div class=\"timeline-content\">\r\n                          <nb-icon status=\"danger\"style=\"margin-right: 2px;\" icon=\"flash-off-outline\"></nb-icon> корпоративный пк\r\n                        </div>\r\n                    </li>\r\n                  </ul>\r\n                  </nb-accordion-item-body>\r\n              </nb-accordion-item>\r\n          </nb-accordion>\r\n      </nb-card-body>\r\n      <nb-card-footer>\r\n          <p class=\"styles_logoTitle__1Kvzk\">\r\n              <b>+ добавить избранных пользователей</b>\r\n          </p>\r\n      </nb-card-footer>\r\n  </nb-card>\r\n  </mat-grid-tile>\r\n  <mat-grid-tile\r\n  [colspan]=\"6\"\r\n  [rowspan]=\"8\">\r\n    <nb-card class=\"content-card\">\r\n      <nb-card-header fixed>\r\n          <div style=\"display: grid; grid-template-columns: repeat(8, 1fr); justify-items: center;\">\r\n              <div *ngFor=\"let section of menu\">\r\n                  <a style=\"text-decoration: none;\" [routerLink]=\"section.routerLink\" (click)='sectionClick(section)'>\r\n                      <img [src]=\"section.url\" [ngClass]=\"{activeUser: section.active}\" />\r\n                      <p>{{section.title}}</p>\r\n                  </a>\r\n              </div>\r\n          </div>\r\n      </nb-card-header>\r\n      <nb-card-body>\r\n          <router-outlet></router-outlet>\r\n      </nb-card-body>\r\n  </nb-card>\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n</div> -->\r\n","import { NgModule } from '@angular/core';\r\nimport {ThemeModule} from '../../@theme/theme.module'\r\nimport {NbAccordionModule,NbStepperModule, NbThemeModule, NbLayoutModule,NbSidebarModule, NbSelectModule, NbUserModule, NbListModule, NbOptionModule, NbFormFieldModule, NbMenuModule,NbIconModule, NbCardModule, NbButtonModule, NbTreeGridModule, NbInputModule, NbCheckboxModule } from '@nebular/theme';\r\n\r\nimport {DefaultComponent} from './default/default.component'\r\nimport { UsersComponent } from './users.component';\r\nimport {UsersRoutingModule} from './users-routing.module'\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { PasswordsComponent } from './passwords/passwords.component';\r\nimport { DownloadsComponent } from './downloads/downloads.component';\r\nimport { ScreenshotsComponent } from './screenshots/screenshots.component';\r\nimport { VideosComponent } from './videos/videos.component';\r\nimport { DocumentsComponent } from './documents/documents.component';\r\nimport { ProxyComponent } from './proxy/proxy.component';\r\nimport { TerminalComponent } from './terminal/terminal.component';\r\nimport { KeylogComponent } from './keylog/keylog.component';\r\nimport { NgApexchartsModule } from \"ng-apexcharts\";\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport { DocumentsTableComponent } from './viewData/table/documents.table.component';\r\n\r\nimport { DocumentsCardsComponent, ShowPicture } from './viewData/cards/documents.cards.component';\r\nimport { Chart10Component } from './default/charts/chart10/chart10.component';\r\nimport { Chart11Component } from './default/charts/chart11/chart11.component';\r\nimport { Chart12Component } from './default/charts/chart12/chart12.component';\r\nimport { Chart13Component } from './default/charts/chart13/chart13.component';\r\n\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgxChartsModule,\r\n    NgApexchartsModule,\r\n    NbAccordionModule,\r\n    MatCardModule,\r\n    NbListModule,\r\n    NbStepperModule,\r\n    NbUserModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    MatGridListModule,\r\n    NbSelectModule,\r\n    NbFormFieldModule,\r\n    ThemeModule,\r\n    NbSidebarModule,\r\n    NbMenuModule,\r\n    NbThemeModule, NbLayoutModule, NbCardModule,\r\n    NbMenuModule,\r\n    UsersRoutingModule,\r\n    NbListModule,\r\n    NbButtonModule,\r\n    NbOptionModule,\r\n    NbUserModule,\r\n    NbTreeGridModule,\r\n    NbCheckboxModule,\r\n  ],\r\n\r\n  declarations: [\r\n    PasswordsComponent,\r\n    DefaultComponent,\r\n    UsersComponent,\r\n    DownloadsComponent,\r\n    ScreenshotsComponent,\r\n    VideosComponent,\r\n    DocumentsComponent,\r\n    ProxyComponent,\r\n    TerminalComponent,\r\n    KeylogComponent,\r\n    Chart10Component,\r\n    Chart11Component,\r\n    DocumentsTableComponent, DocumentsCardsComponent,\r\n    ShowPicture,\r\n    Chart12Component,\r\n    Chart13Component,\r\n  ],\r\n  bootstrap: [DocumentsComponent]\r\n})\r\nexport class UsersModule {\r\n\r\n}\r\n","import { ServerService, Media } from './../../../server.service';\r\nimport { Component } from '@angular/core';\r\n\r\nimport { FileInfo } from '../viewData/data&query/data';\r\nimport { DataGenerator } from '../viewData/generateData';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-videos',\r\n  templateUrl: './videos.component.html',\r\n  styleUrls: ['./videos.component.scss']\r\n})\r\nexport class VideosComponent {\r\n  media : Observable<Media>;\r\n  data: FileInfo[] = [];\r\n  constructor(private server: ServerService) {\r\n    this.data.push(...DataGenerator.createFileInfo(30, \"video_\", [\"mp4\"]));\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.server.telecast.subscribe((resp )=>{\r\n      this.media = this.server.getVideosForUser(resp);\r\n      // this.screenshots.subscribe(files => this.screens = files);\r\n    })}\r\n\r\n  viewTable: boolean = true;\r\n  // Изменение отображения\r\n  // Карточки VS таблица\r\n  switchViewApproach(viewTable: boolean) {\r\n    this.viewTable = viewTable;\r\n  }\r\n}\r\n","<div>\r\n    <div style=\"float: right;\">\r\n        <button nbButton ghost size='large' status=\"primary\" (click)=\"switchViewApproach(true)\" [disabled]=\"viewTable\"><nb-icon icon=\"menu-outline\"></nb-icon></button>\r\n        <button nbButton ghost size='large' status=\"primary\" (click)=\"switchViewApproach(false)\" [disabled]=\"!viewTable\"><nb-icon icon=\"grid-outline\"></nb-icon></button>\r\n    </div>\r\n\r\n    <div *ngIf=\"viewTable;else viewCard\">\r\n\r\n        <documents-table [tag]=\"'video'\" [dataArr]=\"[]\" [screenArr]=\"media\"></documents-table>\r\n    </div>\r\n\r\n    <ng-template #viewCard>\r\n        <div>\r\n\r\n            <documents-cards [tag]=\"'video'\" [dataArr]=\"[]\" [screenArr]=\"media\"></documents-cards>\r\n        </div>\r\n    </ng-template>\r\n\r\n</div>\r\n","import { Input, Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ServerService, Screenshot, Media } from '../../../../server.service';\r\nimport { NbDialogService } from '@nebular/theme';\r\n\r\n\r\nimport { FileInfo } from '../data&query/data';\r\n\r\n@Component({\r\n  selector: 'documents-cards',\r\n  templateUrl: 'documents.cards.component.html',\r\n  styleUrls: ['documents.cards.component.scss']\r\n})\r\nexport class DocumentsCardsComponent implements OnInit {\r\n\r\n  constructor(public server : ServerService, private dialogService: NbDialogService){}\r\n\r\n  @Input() tag: string;\r\n  @Input() dataArr: FileInfo[];\r\n  @Input() screenArr: Observable<Media>;\r\n  screens: Screenshot[] = [];\r\n\r\n  ngOnInit() {\r\n    this.screenArr.subscribe(files => {\r\n      this.screens.push(...files.files);\r\n    });\r\n  }\r\n  DateWithFormat(date: string):string {\r\n    return new Intl.DateTimeFormat('ru').format(new Date(date));\r\n  }\r\n\r\n  viewCloser(link) {\r\n    if (screen.width > 1050) \r\n        this.dialogService.open(ShowPicture, { context: { link: link, tag: this.tag }, });\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'show-picture',\r\n  template: `<h3 style=\"color: white; text-align: center;\">{{fileName}}</h3>\r\n  <img *ngIf=\"tag == 'img'\" [src]=\"server.HOST + link\">\r\n  <video *ngIf=\"tag == 'video'\" [src]=\"server.HOST + link\">\r\n  `\r\n})\r\nexport class ShowPicture implements OnInit{\r\n  constructor(public server : ServerService){\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.fileName = this.link.split('/')[this.link.split('/').length - 1] \r\n  }\r\n  fileName: string;\r\n  link: string;\r\n  tag: string;\r\n}\r\n","<div class=\"row grid-show\">\r\n    <!-- Данные с сервера -->\r\n    <nb-card *ngFor=\"let card of screens\">\r\n        <nb-card-header>\r\n            {{card.name}}\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <!-- <a target=\"_blank\"  [href]=\"server.HOST+card.link\"> -->\r\n            <img (click)=\"viewCloser(card.link)\" style=\"border-radius: 8px;height: 200px;width: auto;\" [src]=\"server.HOST+card.link\">\r\n            <!-- </a> -->\r\n\r\n        </nb-card-body>\r\n        <nb-card-footer>\r\n            <p>Дата: {{card.timestamp}}</p>\r\n            <p>Размер: {{card.size}} Кб</p>\r\n        </nb-card-footer>\r\n    </nb-card>\r\n    <!-- Сгенерированная данные -->\r\n    <nb-card *ngFor=\"let card of dataArr\">\r\n        <nb-card-header>\r\n            {{card.name}}\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <p>{{card.date}}</p>\r\n            <!-- <p>{{DateWithFormat(card.date)}}</p> дата в нормальном формате -->\r\n            <p>{{card.size}}</p>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</div>","import { Input, Component, OnInit, Inject } from '@angular/core';\r\n\r\nimport { Media } from '../../../../server.service';\r\nimport { FileInfo } from '../data&query/data';\r\n\r\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder, NB_WINDOW, NbMenuService, NbDialogService } from '@nebular/theme';\r\nimport { Observable } from 'rxjs';\r\nimport { ShowPicture } from '../cards/documents.cards.component';\r\n\r\ninterface TreeNode<T> {\r\n  data: T;\r\n}\r\n\r\ninterface FSEntry {\r\n  link: string;\r\n  checkbox: boolean;\r\n  Название: string;\r\n  Размер: string;\r\n  Дата: Date;\r\n  tableDate: string;\r\n  Владелец: string;\r\n  Просмотренные: boolean;\r\n  Действия: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'documents-table',\r\n  templateUrl:'documents.table.component.html',\r\n  styleUrls: ['documents.table.component.scss']\r\n})\r\nexport class DocumentsTableComponent implements OnInit{\r\n\r\n    //-----------------------------------Чекбокс\r\n    setCheckedStatus(row, $checked) {\r\n      //this.checked = checked.target.checked;\r\n      row.data['checkbox'] = $checked.target.checked;\r\n      this.checkBoxsetAll = false;\r\n    }\r\n    // Настройка чекбокса для выделения всего\r\n    checkBoxsetAll: boolean = false;\r\n    checkAll($checked) {\r\n      for (const iterator of this.data) {\r\n        iterator.data.checkbox = $checked.target.checked;\r\n      }\r\n      this.checkBoxsetAll = $checked.target.checked;\r\n      this.dataSource.setData(this.data);\r\n    }\r\n\r\n  @Input() tag: string;\r\n  @Input() dataArr: FileInfo[];\r\n  @Input() screenArr: Observable<Media>;\r\n\r\n  // Настройки таблицы\r\n  fileNameColumn = 'Название';\r\n  volumeColumn = 'Размер'\r\n  dateColumn = 'tableDate';\r\n  viewedColumn = 'Просмотренные';\r\n  visibleDateColumn = 'Дата';\r\n  usersColumn = 'Владелец';\r\n  actionColumn = 'Действия';\r\n\r\n  allColumns = [this.fileNameColumn, this.dateColumn, this.volumeColumn, this.visibleDateColumn, this.usersColumn, this.viewedColumn, this.actionColumn];\r\n\r\n  screenWidth: number = screen.width;\r\n  showViewed: boolean = screen.width > 925;\r\n  showOwners: boolean = screen.width > 860;\r\n\r\n  onResize() {\r\n    this.screenWidth = screen.width;\r\n    \r\n    this.allColumns =                              [this.fileNameColumn, this.dateColumn, this.volumeColumn, this.visibleDateColumn, this.usersColumn, this.viewedColumn, this.actionColumn];\r\n    if (this.screenWidth <= 925) this.allColumns = [this.fileNameColumn, this.dateColumn, this.volumeColumn, this.visibleDateColumn, this.usersColumn, this.actionColumn];  \r\n    if (this.screenWidth <= 860) this.allColumns = [this.fileNameColumn, this.dateColumn, this.volumeColumn, this.visibleDateColumn, this.actionColumn]; \r\n\r\n    this.showViewed = this.screenWidth > 925;\r\n    this.showOwners = this.screenWidth > 860;\r\n  }\r\n  dataSource: NbTreeGridDataSource<FSEntry>;\r\n\r\n  sortColumn: string;\r\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\r\n\r\n  private data: TreeNode<FSEntry>[] = [];\r\n\r\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>,\r\n    private nbMenuService: NbMenuService, @Inject(NB_WINDOW) private window, private dialogService: NbDialogService) { \r\n\r\n    if (this.screenWidth <= 925) this.allColumns = [this.fileNameColumn, this.dateColumn, this.volumeColumn, this.visibleDateColumn, this.usersColumn, this.actionColumn];  \r\n    if (this.screenWidth <= 860) this.allColumns = [this.fileNameColumn, this.dateColumn, this.volumeColumn, this.visibleDateColumn, this.actionColumn];   \r\n  }\r\n\r\n  // Получаем данные\r\n  ngOnInit() {\r\n    if (this.dataArr.length != 0) {\r\n      for (let i = 0; i < this.dataArr.length; i++) {\r\n        this.data.push({\r\n          data:{\r\n            link: '',\r\n            checkbox: false,\r\n            Название: this.dataArr[i].name,\r\n            Размер:   this.dataArr[i].size,\r\n            Дата:     this.dataArr[i].date,\r\n            tableDate: new Intl.DateTimeFormat('ru').format(this.dataArr[i].date),\r\n            Просмотренные: false, //Math.random()*2 > 1 ? true : false,\r\n            Владелец: '',\r\n            Действия: ''\r\n        }});\r\n      }\r\n      this.dataSource = this.dataSourceBuilder.create(this.data);\r\n    } else {\r\n      this.screenArr.subscribe(screens => {\r\n        for (let i = 0; i < screens.files.length; i++) {\r\n          this.data.push({\r\n            data:{\r\n              link: screens.files[i].link,\r\n              checkbox: false,\r\n              Название: screens.files[i].name,\r\n              Размер:   `${screens.files[i].size}кб`,\r\n              Дата:   new Date(screens.files[i].timestamp),\r\n              tableDate: screens.files[i].timestamp,\r\n              Просмотренные: false,//Math.random()*2 > 1 ? true : false,\r\n              Владелец: '',\r\n              Действия: ''\r\n          }});\r\n        }\r\n        this.dataSource = this.dataSourceBuilder.create(this.data);\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  updateSort(sortRequest: NbSortRequest): void {\r\n    this.sortColumn = sortRequest.column;\r\n    this.sortDirection = sortRequest.direction;\r\n  }\r\n\r\n  getSortDirection(column: string): NbSortDirection {\r\n    if (this.sortColumn === column) {\r\n      return this.sortDirection;\r\n    }\r\n    return NbSortDirection.NONE;\r\n  }\r\n\r\n\r\n  getShowOn(index: number) {\r\n    const minWithForMultipleColumns = 400;\r\n    const nextColumnStep = 100;\r\n    return minWithForMultipleColumns + (nextColumnStep * index);\r\n  }\r\n\r\n  viewCloser(link) {\r\n    if (link['link'] == '' || screen.width < 1050) {\r\n      return;\r\n    }\r\n    this.dialogService.open(ShowPicture, { context: { link: link['link'], tag: this.tag }, });\r\n  }\r\n}\r\n","<section style=\"display:flex;justify-content: space-between;\">\r\n    <div style=\"justify-items: center;\">\r\n        <nb-form-field>\r\n\r\n            <nb-icon nbPrefix icon=\"search-outline\" pack=\"eva\"></nb-icon>\r\n            <input nbInput [nbFilterInput]=\"dataSource\" class=\"search-input\" type=\"text\" placeholder=\"Поиск\" />\r\n\r\n\r\n        </nb-form-field>\r\n    </div>\r\n</section>\r\n\r\n<table (window:resize)=\"onResize()\" [nbTreeGrid]=\"dataSource\" [nbSort]=\"dataSource\" (sort)=\"updateSort($event)\">\r\n    <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\r\n    <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\r\n\r\n    <ng-container [nbTreeGridColumnDef]=\"fileNameColumn\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(fileNameColumn)\" *nbTreeGridHeaderCellDef style=\"width: 25vw !important; white-space: nowrap\">\r\n            <nb-checkbox status=\"primary\" [checked]=\"checkBoxsetAll\" (change)=\"checkAll($event)\"></nb-checkbox>\r\n            {{ fileNameColumn }}\r\n        </th>\r\n        <td (click)=\"viewCloser(row.data)\" nbTreeGridCell *nbTreeGridCellDef=\"let row\" nowrap>\r\n            <nb-checkbox status=\"primary \" [checked]=\"row.data['checkbox']\" (change)=\"setCheckedStatus(row, $event)\"></nb-checkbox>\r\n            {{ row.data[fileNameColumn] }}\r\n        </td>\r\n    </ng-container>\r\n\r\n    <!-- Невидимая дата для сортировки -->\r\n    <ng-container [nbTreeGridColumnDef]=\"dateColumn\" style=\"width: 0px; padding: 0px !important;\">\r\n        <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef style=\"width: 0px; padding: 0px !important;\">\r\n            <!-- {{ dateColumn }} -->\r\n        </th>\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\" style=\"width: 0px; padding: 0px !important;\">\r\n            <!-- {{ row.data[dateColumn] || \"-\" }} -->\r\n        </td>\r\n    </ng-container>\r\n\r\n    <ng-container [nbTreeGridColumnDef]=\"volumeColumn\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(volumeColumn)\" *nbTreeGridHeaderCellDef style=\"padding-right: 0px;\">\r\n            {{ volumeColumn }}\r\n        </th>\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\" style=\"width: min-content\">\r\n            {{ row.data[volumeColumn] }}\r\n        </td>\r\n    </ng-container>\r\n\r\n    <ng-container [nbTreeGridColumnDef]=\"visibleDateColumn\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(visibleDateColumn)\" *nbTreeGridHeaderCellDef>\r\n            {{ visibleDateColumn }}\r\n        </th>\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\" style=\"width: min-content; padding-right: 0px;\">\r\n            {{ row.data[dateColumn] }}\r\n        </td>\r\n    </ng-container>\r\n\r\n    <ng-container [nbTreeGridColumnDef]=\"usersColumn\" *ngIf=\"showOwners\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(usersColumn)\" *nbTreeGridHeaderCellDef>\r\n            {{ usersColumn }}\r\n        </th>\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\r\n        </td>\r\n    </ng-container>\r\n\r\n    <ng-container [nbTreeGridColumnDef]=\"viewedColumn\" *ngIf=\"showViewed\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(viewedColumn)\" *nbTreeGridHeaderCellDef>\r\n            {{ viewedColumn }}\r\n        </th>\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\r\n\r\n            <nb-icon [icon]=\"'eye-outline'\" [status]=\"row.data[viewedColumn] ? 'info' : 'basic' \"></nb-icon>\r\n\r\n            <!-- {{ row.data[viewedColumn] }} -->\r\n        </td>\r\n    </ng-container>\r\n\r\n    <ng-container [nbTreeGridColumnDef]=\"actionColumn\">\r\n        <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef style=\"text-align: center;padding-left: 0rem; padding-right: 0rem;\">\r\n            {{ actionColumn }}\r\n        </th>\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\" style=\"text-align: center; width: 5vw; padding-left: 0rem; padding-right: 0rem;\">\r\n            <!-- {{ row.data[actionColumn] || \"- \" }} -->\r\n\r\n            <nb-icon icon=\"edit-outline\" pack=\"eva\" nbContextMenuTrigger=\"hover\" nbContextMenuTag=\"my-context-menu\"></nb-icon>\r\n            <!-- [nbContextMenu]=\"items\" -->\r\n        </td>\r\n    </ng-container>\r\n</table>"],"sourceRoot":"webpack:///"}