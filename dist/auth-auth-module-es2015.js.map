{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NbAuthComponent } from '@nebular/auth';\r\nimport { AuthComponent } from './auth.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n    // component: NbAuthComponent,\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"ngx-auth\",\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class AuthComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { AuthRoutingModule } from \"./auth-routing.module\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\n// import { NbAuthModule, NbPasswordAuthStrategy } from \"@nebular/auth\";\r\n// import {\r\n//   NbAlertModule,\r\n//   NbButtonModule,\r\n//   NbCheckboxModule,\r\n//   NbInputModule,\r\n// } from \"@nebular/theme\";\r\n\r\nimport { AuthComponent } from \"./auth.component\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\n\r\n@NgModule({\r\n  declarations: [AuthComponent, LoginComponent],\r\n  // bootstrap: [AuthComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n\r\n    // NbAlertModule,\r\n    // NbInputModule,\r\n    // NbButtonModule,\r\n    // NbCheckboxModule,\r\n\r\n    AuthRoutingModule,\r\n\r\n    // NbAuthModule.forRoot(),\r\n  ],\r\n})\r\nexport class AuthModule {}\r\n","import { Observable, Subscription } from \"rxjs\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ServerService } from \"./../../server.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { OnDestroy } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"ngx-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  isAuth: boolean = false;\r\n  constructor(private server: ServerService, private router: Router) {\r\n    let status = server.getUserStatus();\r\n    this.server.IsAuthored.next(status);\r\n    if (status) {\r\n      this.isAuth = status;\r\n    }\r\n  }\r\n\r\n  loginForm: FormGroup;\r\n  ngOnInit(): void {\r\n    this.loginForm = new FormGroup({\r\n      login: new FormControl(\"\", Validators.required),\r\n      password: new FormControl(\"\", Validators.required),\r\n    });\r\n  }\r\n\r\n  // ngOnDestroy(): void {\r\n  //   if(this.sub){ this.sub.unsubscribe() }\r\n  // }\r\n\r\n  onFocus() {\r\n    if (this.incorrectData) {\r\n      this.incorrectData = false;\r\n    }\r\n  }\r\n\r\n  // sub: Subscription;\r\n  incorrectData: boolean;\r\n  onSubmit(e: any) {\r\n    let user = {\r\n      username: e.target[0].value,\r\n      password: e.target[1].value,\r\n    };\r\n\r\n    if (this.server.getJwtToken()) {\r\n      this.router.navigate([\"pages/dashboard\"]);\r\n    } else {\r\n      this.server.login(user).subscribe((resp) => {\r\n        if (resp) {\r\n          this.router.navigate([\"pages/dashboard\"]);\r\n        } else {\r\n          this.incorrectData = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"card\" *ngIf=\"isAuth\">\r\n  <div class=\"card-body\">\r\n    <h1 class=\"card-title\">Вы уже авторизованы</h1>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"card\" *ngIf=\"!isAuth\">\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">Авторизируйтесь</h5>\r\n    <form (submit)=\"onSubmit($event)\" [formGroup]=\"loginForm\">\r\n      <label\r\n        class=\"label\"\r\n        for=\"login\"\r\n        [ngClass]=\"{\r\n          'message-error':\r\n            (loginForm.get('login').invalid &&\r\n              loginForm.get('login').touched) ||\r\n            incorrectData\r\n        }\"\r\n        >Логин</label\r\n      >\r\n      <input\r\n        class=\"input\"\r\n        formControlName=\"login\"\r\n        id=\"login\"\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        aria-label=\"Sizing example input\"\r\n        aria-describedby=\"inputGroup-sizing-default\"\r\n        (focus)=\"onFocus()\"\r\n        [ngClass]=\"{\r\n          'message-error':\r\n            (loginForm.get('login').invalid &&\r\n              loginForm.get('login').touched) ||\r\n            incorrectData\r\n        }\"\r\n      />\r\n      <span\r\n        class=\"message-error\"\r\n        *ngIf=\"loginForm.get('login').invalid && loginForm.get('login').touched\"\r\n      >\r\n        <span *ngIf=\"loginForm.get('login').errors?.required\"\r\n          >Не введён логин</span\r\n        >\r\n      </span>\r\n      <span class=\"message-error\" *ngIf=\"incorrectData\"\r\n        >Некорректный логин или пароль</span\r\n      >\r\n\r\n      <label\r\n        class=\"label\"\r\n        for=\"password\"\r\n        [ngClass]=\"{\r\n          'message-error':\r\n            (loginForm.get('password').invalid &&\r\n              loginForm.get('password').touched) ||\r\n            incorrectData\r\n        }\"\r\n        >Пароль</label\r\n      >\r\n      <input\r\n        class=\"input\"\r\n        formControlName=\"password\"\r\n        id=\"password\"\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        aria-label=\"Sizing example input\"\r\n        aria-describedby=\"inputGroup-sizing-default\"\r\n        (focus)=\"onFocus()\"\r\n        [ngClass]=\"{\r\n          'message-error':\r\n            (loginForm.get('password').invalid &&\r\n              loginForm.get('password').touched) ||\r\n            incorrectData\r\n        }\"\r\n      />\r\n      <span\r\n        class=\"message-error\"\r\n        *ngIf=\"\r\n          (loginForm.get('password').invalid &&\r\n            loginForm.get('password').touched) ||\r\n          incorrectData\r\n        \"\r\n      >\r\n        <span *ngIf=\"loginForm.get('password').errors?.required\"\r\n          >Не введён пароль</span\r\n        >\r\n      </span>\r\n      <span class=\"message-error\" *ngIf=\"incorrectData\"\r\n        >Некорректный логин или пароль</span\r\n      >\r\n\r\n      <!-- <div class=\"field-remember\">\r\n        <input id=\"remember\" type=\"checkbox\" />\r\n        <label for=\"remember\">Запомнить меня</label>\r\n      </div> -->\r\n\r\n      <button\r\n        [disabled]=\"loginForm.invalid\"\r\n        type=\"submit\"\r\n        class=\"btn btn-primary btn-block\"\r\n      >\r\n        Войти\r\n      </button>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}